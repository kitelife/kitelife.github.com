<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>数据与智能</title><link>http://youngsterxyf.github.io/</link><description></description><lastBuildDate>Wed, 14 Sep 2022 00:00:00 +0800</lastBuildDate><item><title>读文笔记：关于 MMAP 与 SSD</title><link>http://youngsterxyf.github.io/2022/09/14/reading-about-mmap-ssd/</link><description>&lt;p&gt;设计一种存储，第一要明确应用场景和存储系统的工作负载，第二要了解底层硬件的特点。&lt;/p&gt;
&lt;h2&gt;1、&lt;a href="https://db.cs.cmu.edu/mmap-cidr2022/"&gt;Are You Sure You Want to Use MMAP in Your Database Management …&lt;/a&gt;&lt;/h2&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">xiayf</dc:creator><pubDate>Wed, 14 Sep 2022 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2022-09-14:/2022/09/14/reading-about-mmap-ssd/</guid><category>其他</category><category>论文</category><category>SSD</category><category>学习</category><category>性能</category></item><item><title>Disruptor 等待策略引发的 CPU 负载异常问题</title><link>http://youngsterxyf.github.io/2020/07/14/disruptor-waitstrategy-cpu-busy/</link><description>&lt;h2&gt;背景&lt;/h2&gt;
&lt;p&gt;工作中，我负责的系统是一个数据流处理服务 - 以流水线（pipeline）的形式分多级异步处理：&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://i.loli.net/2020/07/14/ONwUsrlhLmIq8BW.jpg"&gt;&lt;/p&gt;
&lt;p&gt;其中的 队列 实际使用的是 &lt;a href="https://github.com/LMAX-Exchange/disruptor"&gt;Disruptor&lt;/a&gt;，多生 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">xiayf</dc:creator><pubDate>Tue, 14 Jul 2020 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2020-07-14:/2020/07/14/disruptor-waitstrategy-cpu-busy/</guid><category>其他</category><category>问题排查</category><category>Java</category><category>Disruptor</category></item><item><title>如何剖析 JVM 应用（译）</title><link>http://youngsterxyf.github.io/2020/07/13/how-to-profile-jvm-applications/</link><description>&lt;p&gt;原文链接：&lt;a href="https://www.lightbend.com/blog/profiling-jvm-applications"&gt;How to profile JVM applications&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Hi 大家好。工具团队（tooling team）近期的一个关注点是改进 sbt 贡献流程（ improvement of the contribution process to sbt）。我们一直在思考的 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">xiayf</dc:creator><pubDate>Mon, 13 Jul 2020 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2020-07-13:/2020/07/13/how-to-profile-jvm-applications/</guid><category>其他</category><category>翻译</category><category>Java</category><category>工具</category><category>问题排查</category></item><item><title>博客构建环境准备</title><link>http://youngsterxyf.github.io/2020/06/14/blog-build-env/</link><description>&lt;p&gt;好记性不如烂笔头。&lt;/p&gt;
&lt;p&gt;1、Python 虚拟环境&lt;/p&gt;
&lt;div class="highlight" style="background: #ffffff"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;virtualenv -p python3 ~/.py3
source ~/.py3/bin/activate
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;2、安装 Python 依赖包&lt;/p&gt;
&lt;div class="highlight" style="background: #ffffff"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip install pelican[Markdown]   &lt;span style="color: #008000"&gt;# 可能需要先安装 pip：easy_install pip&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;3、安装主题包&lt;/p&gt;
&lt;div class="highlight" style="background: #ffffff"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git …&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">xiayf</dc:creator><pubDate>Sun, 14 Jun 2020 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2020-06-14:/2020/06/14/blog-build-env/</guid><category>其他</category></item><item><title>读文笔记：Kafka 官方设计文档</title><link>http://youngsterxyf.github.io/2019/10/13/reading-kafka-design/</link><description>&lt;p&gt;原文：&lt;a href="http://kafka.apache.org/documentation/#design"&gt;http://kafka.apache.org/documentation/#design&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;数据持久化&lt;/h2&gt;
&lt;h4&gt;不用惧怕文件系统&lt;/h4&gt;
&lt;p&gt;磁盘的读写速度，取决于如何读写。对于线性读写方式，操作系统做了充 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">xiayf</dc:creator><pubDate>Sun, 13 Oct 2019 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2019-10-13:/2019/10/13/reading-kafka-design/</guid><category>其他</category><category>文章</category><category>笔记</category><category>经典</category><category>Kafka</category><category>进行中</category></item><item><title>读文笔记：Photon - Fault-tolerant and Scalable Joining of Continuous Data Streams</title><link>http://youngsterxyf.github.io/2019/10/10/reading-photon/</link><description>&lt;p&gt;原文：&lt;a href="https://static.googleusercontent.com/media/research.google.com/zh-CN//pubs/archive/41318.pdf"&gt;Photon: Fault-tolerant and Scalable Joining of Continuous Data Streams&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Photon 是谷歌广告系统中用于 join 广告曝光日志流和点击日志流的一套系统。&lt;/p&gt;
&lt;p&gt;数据流 join 为什么没用 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">xiayf</dc:creator><pubDate>Thu, 10 Oct 2019 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2019-10-10:/2019/10/10/reading-photon/</guid><category>其他</category><category>论文</category><category>笔记</category></item><item><title>读文笔记：日志 - 每个软件工程师都应该了解的实时数据统一抽象</title><link>http://youngsterxyf.github.io/2019/10/10/reading-the-log/</link><description>&lt;p&gt;原文：&lt;a href="https://engineering.linkedin.com/distributed-systems/log-what-every-software-engineer-should-know-about-real-time-datas-unifying"&gt;The Log: What every software engineer should know about real-time data's unifying abstraction&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;一句话概括，这篇文章细说了 Kafka 的本质原理、解决的问题、适用性等。&lt;/p&gt;
&lt;p&gt;Kafka 本质上是提供日 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">xiayf</dc:creator><pubDate>Thu, 10 Oct 2019 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2019-10-10:/2019/10/10/reading-the-log/</guid><category>其他</category><category>论文</category><category>笔记</category></item><item><title>Lucene 查询解析器语法（译）</title><link>http://youngsterxyf.github.io/2019/09/04/lucene-query-parser-syntax/</link><description>&lt;p&gt;原文：&lt;a href="http://lucene.apache.org/core/8_2_0/queryparser/org/apache/lucene/queryparser/classic/package-summary.html#package.description"&gt;Query Parser Syntax&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;概览&lt;/h2&gt;
&lt;p&gt;Lucene 除了提供 API 方便开发者创建查询请求，还通过一个查询解析器（一个词法分析器，使用 JavaCC 将一个字符串 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">xiayf</dc:creator><pubDate>Wed, 04 Sep 2019 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2019-09-04:/2019/09/04/lucene-query-parser-syntax/</guid><category>其他</category><category>翻译</category><category>Lucene</category><category>ElasticSearch</category><category>Kibana</category></item><item><title>一个 Python 小项目的小结</title><link>http://youngsterxyf.github.io/2019/08/14/a-python-project-summary/</link><description>&lt;p&gt;前段时间临时接手一个 Python 小项目，这个项目实现的类似一个管控平台，其中核心功能是为算法同学提供机器学习模型训 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">xiayf</dc:creator><pubDate>Wed, 14 Aug 2019 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2019-08-14:/2019/08/14/a-python-project-summary/</guid><category>其他</category><category>总结</category><category>Python</category></item><item><title>Reactor 官方文档翻译简化版</title><link>http://youngsterxyf.github.io/2019/06/26/simplified-reactor-doc-zh/</link><description>&lt;p&gt;原文：&lt;a href="https://projectreactor.io/docs/core/release/reference/"&gt;Reactor 3 Reference Guide&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;1. 起步&lt;/h3&gt;
&lt;h4&gt;1.1 Reactor 简介&lt;/h4&gt;
&lt;p&gt;Reactor 是为 JVM 准备的一个完全非阻塞的反应式编程基础组件，支持高效的需求管理（以管理 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">xiayf</dc:creator><pubDate>Wed, 26 Jun 2019 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2019-06-26:/2019/06/26/simplified-reactor-doc-zh/</guid><category>其他</category><category>翻译</category><category>Reactor</category><category>Reactive</category></item><item><title>Java System.getProperty VS. System.getenv（译）</title><link>http://youngsterxyf.github.io/2019/06/25/java-prop-env/</link><description>&lt;p&gt;原文：&lt;a href="https://www.baeldung.com/java-system-get-property-vs-system-getenv"&gt;Java System.getProperty vs System.getenv&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;1、简介&lt;/h2&gt;
&lt;p&gt;Java 应用代码中会自动引入 &lt;code&gt;java.lang&lt;/code&gt; 包。这个包包含很多常用的类，包括 &lt;code&gt;NullPointerException&lt;/code&gt;、&lt;code&gt;Object&lt;/code&gt;、&lt;code&gt;Math&lt;/code&gt;、&lt;code&gt;String&lt;/code&gt; 等等。&lt;/p&gt;
&lt;p&gt;其中 &lt;code&gt;java.lang.System&lt;/code&gt; 类 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">xiayf</dc:creator><pubDate>Tue, 25 Jun 2019 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2019-06-25:/2019/06/25/java-prop-env/</guid><category>其他</category><category>翻译</category><category>Java</category></item><item><title>Java 单测伴侣 - mockito</title><link>http://youngsterxyf.github.io/2019/06/17/mockito/</link><description>&lt;p&gt;其实工作以来，我很少写测试/单测代码，一方面是大部分互联网公司团队对测试的要求不高，另一方面是想写好测试代码 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">xiayf</dc:creator><pubDate>Mon, 17 Jun 2019 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2019-06-17:/2019/06/17/mockito/</guid><category>其他</category><category>Java</category><category>mockito</category><category>单测</category></item><item><title>编写漂亮的 shell 代码</title><link>http://youngsterxyf.github.io/2018/05/16/beautiful-shell-code/</link><description>&lt;p&gt;使用丑陋的编程语言也能写出漂亮的代码。&lt;/p&gt;
&lt;div class="highlight" style="background: #ffffff"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;true_then_run() {
    condition=$1
    action=$2

    (&lt;span style="color: #a31515"&gt;${&lt;/span&gt;condition&lt;span style="color: #a31515"&gt;}&lt;/span&gt;)
    &lt;span style="color: #0000ff"&gt;if&lt;/span&gt; [ $? -eq 0 ]
    &lt;span style="color: #0000ff"&gt;then&lt;/span&gt;
        (&lt;span style="color: #a31515"&gt;${&lt;/span&gt;action&lt;span style="color: #a31515"&gt;}&lt;/span&gt;)
    &lt;span style="color: #0000ff"&gt;else&lt;/span&gt;
        echo &lt;span style="color: #a31515"&gt;&amp;quot;&amp;#39;&lt;/span&gt;$1&lt;span style="color: #a31515"&gt;&amp;#39; is false, don&amp;#39;t run &amp;#39;&lt;/span&gt;$2&lt;span style="color: #a31515"&gt;&amp;#39;&amp;quot;&lt;/span&gt;
    &lt;span style="color: #0000ff"&gt;fi&lt;/span&gt;
}

false_then_run() {
    condition=$1
    action=$2

    (&lt;span style="color: #a31515"&gt;${&lt;/span&gt;condition&lt;span style="color: #a31515"&gt;}&lt;/span&gt;)
    &lt;span style="color: #0000ff"&gt;if&lt;/span&gt; [ $? -ne 0 ]
    &lt;span style="color: #0000ff"&gt;then&lt;/span&gt;
        (&lt;span style="color: #a31515"&gt;${&lt;/span&gt;action …&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">xiayf</dc:creator><pubDate>Wed, 16 May 2018 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2018-05-16:/2018/05/16/beautiful-shell-code/</guid><category>其他</category><category>Bash</category></item><item><title>配置 Maven 自动化构建 protobuf 代码依赖</title><link>http://youngsterxyf.github.io/2018/05/14/maven-protobuf/</link><description>&lt;p&gt;1.pom.xml 中添加如下属性配置：&lt;/p&gt;
&lt;div class="highlight" style="background: #ffffff"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;lt;properties&amp;gt;
    &lt;span style="color: #008000"&gt;&amp;lt;!-- protobuf paths --&amp;gt;&lt;/span&gt;
    &amp;lt;protobuf.input.directory&amp;gt;${project.basedir}/src/main/protobuf&amp;lt;/protobuf.input.directory&amp;gt;
    &amp;lt;protobuf.output.directory&amp;gt;${project.build.directory}/generated-sources&amp;lt;/protobuf.output.directory&amp;gt;
    &lt;span style="color: #008000"&gt;&amp;lt;!-- library versions --&amp;gt;&lt;/span&gt;
    &amp;lt;build-helper-maven-plugin.version&amp;gt;3.0.0&amp;lt;/build-helper-maven-plugin.version&amp;gt;
    &amp;lt;maven-antrun-plugin.version&amp;gt;1.8&amp;lt;/maven-antrun-plugin …&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">xiayf</dc:creator><pubDate>Mon, 14 May 2018 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2018-05-14:/2018/05/14/maven-protobuf/</guid><category>其他</category><category>java</category><category>maven</category><category>protobuf</category></item><item><title>《Python 编程之美》译者序</title><link>http://youngsterxyf.github.io/2018/04/01/the-python-guide/</link><description>&lt;p&gt;从毕业至今，在互联网行业从事软件研发工作，将近五年。这五年间，做过后端开发、前端开发、大数据处理等，使用过的编程语 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">xiayf</dc:creator><pubDate>Sun, 01 Apr 2018 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2018-04-01:/2018/04/01/the-python-guide/</guid><category>其他</category><category>翻译</category><category>书籍</category></item><item><title>《精通Python设计模式》译者序</title><link>http://youngsterxyf.github.io/2016/07/01/mpdp/</link><description>&lt;p&gt;在我读大学那几年，设计模式可谓火极一时，各大公司校招面试也几乎都会考设计模式，反观现在，则似乎很少有人聊设计 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Fri, 01 Jul 2016 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2016-07-01:/2016/07/01/mpdp/</guid><category>其他</category><category>翻译</category><category>书籍</category></item><item><title>应用MySQL InnoDB全文索引</title><link>http://youngsterxyf.github.io/2016/06/11/mysql-fulltext-application/</link><description>&lt;h2&gt;问题&lt;/h2&gt;
&lt;p&gt;之前涉及的一项工作要求对某些数据做全文索引，并以API向其他内部系统提供搜索查询服务。&lt;/p&gt;
&lt;p&gt;由于需要建全文索引的数据量并不大，且已有的数据都以 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Sat, 11 Jun 2016 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2016-06-11:/2016/06/11/mysql-fulltext-application/</guid><category>其他</category><category>MySQL</category><category>笔记</category></item><item><title>关于并发的一个小技巧</title><link>http://youngsterxyf.github.io/2016/06/10/a-simple-concurrency-trick/</link><description>&lt;p&gt;前段时间在参与实现一个新业务系统的Demo。该系统集成了多个已有系统的数据，涉及的数据量较大，但由于人力少，时间短 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Fri, 10 Jun 2016 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2016-06-10:/2016/06/10/a-simple-concurrency-trick/</guid><category>其他</category><category>笔记</category><category>SQL</category></item><item><title>关于API访问频率限制的一个问题</title><link>http://youngsterxyf.github.io/2016/06/05/frequency-limitation/</link><description>&lt;p&gt;工作中涉及一些对外开放的无需特殊权限的API，用户会因为某些需求而通过程序来频繁访问这些API，导致系统的负载陡 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Sun, 05 Jun 2016 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2016-06-05:/2016/06/05/frequency-limitation/</guid><category>其他</category><category>Nginx</category><category>笔记</category><category>工作</category></item><item><title>为什么我要送掉纸质书？</title><link>http://youngsterxyf.github.io/2016/02/28/why-preseting-book/</link><description>&lt;p&gt;小时候，不知为何喜欢读书，而又没钱买，所以在家都是翻两个哥哥的课本 - 语文、历史、地理等，都翻个遍。更有甚者，竟然还从邻 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Sun, 28 Feb 2016 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2016-02-28:/2016/02/28/why-preseting-book/</guid><category>其他</category><category>笔记</category><category>生活</category><category>感悟</category></item><item><title>如何杀死defunct进程（译）</title><link>http://youngsterxyf.github.io/2016/02/18/kill-defunct/</link><description>&lt;p&gt;原文：&lt;a href="https://kenno.wordpress.com/2007/04/04/how-to-kill-defunct-process/"&gt;How to kill defunct process&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;译者：&lt;a href="https://github.com/youngsterxyf"&gt;youngsterxyf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;defunct进程是指出错损坏的进程，父子进程之间不会再通信。有时，它们会演变成“僵尸进程”，存留在你的系统中，直到系统重启。可以 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Thu, 18 Feb 2016 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2016-02-18:/2016/02/18/kill-defunct/</guid><category>其他</category><category>Linux</category></item><item><title>Base64编码原理与应用</title><link>http://youngsterxyf.github.io/2016/01/24/base64-encoding/</link><description>&lt;p&gt;2015年，我们在青云平台上实现了“百度云观测”应用。青云应用本质上是一个iframe，在向iframe服务方发送的请求中会携带一些数据，青云平台会使用&lt;code&gt;Base64 URL&lt;/code&gt;对这些数据进行编 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Sun, 24 Jan 2016 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2016-01-24:/2016/01/24/base64-encoding/</guid><category>其他</category><category>笔记</category><category>编码</category></item><item><title>基于Github的pull request流程做开源贡献</title><link>http://youngsterxyf.github.io/2016/01/18/github-fork-pull-request/</link><description>&lt;p&gt;最近给 &lt;a href="https://github.com/astaxie/beego"&gt;beego&lt;/a&gt; 提了几个 pull request （简称PR），都已被接受。在使用pull request的过程中，遇到了一点小问题，才知以前并非真的理解这个流程，故在此做点 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Mon, 18 Jan 2016 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2016-01-18:/2016/01/18/github-fork-pull-request/</guid><category>其他</category><category>github</category><category>笔记</category><category>git</category><category>开源</category></item><item><title>关于Redis与Memcached的一点澄清（译）</title><link>http://youngsterxyf.github.io/2015/12/01/redis-vs-memcached/</link><description>&lt;p&gt;原文：&lt;a href="http://antirez.com/news/94"&gt;Clarifications about Redis and Memcached&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;译者：&lt;a href="https://github.com/youngsterxyf"&gt;youngsterxyf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;译注：本文为Redis的作者所写&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;如果你了解我，就会知道我并不是那种认为竞品是一件坏事的人。实际上我喜欢用 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Tue, 01 Dec 2015 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2015-12-01:/2015/12/01/redis-vs-memcached/</guid><category>其他</category><category>翻译</category><category>Redis</category><category>Memcached</category></item><item><title>青云 iframe 应用开发</title><link>http://youngsterxyf.github.io/2015/11/20/qingcloud-iframe-app/</link><description>&lt;p&gt;上周的主要工作是将产品的功能集成到青云。青云提供 iframe 的方式来集成第三方服务，这是一种互利的做法，而且对于青云 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Fri, 20 Nov 2015 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2015-11-20:/2015/11/20/qingcloud-iframe-app/</guid><category>其他</category><category>笔记</category><category>工作</category><category>总结</category></item><item><title>又一次系统故障</title><link>http://youngsterxyf.github.io/2015/11/16/another-system-fault/</link><description>&lt;p&gt;上周五早上9点多，我还在上班的路上，接到技术leader的电话：线上突然出故障了；接着发来一张故障信息页面截图：&lt;/p&gt;
&lt;p&gt;&lt;img alt="system-fault-err-page" src="https://i.loli.net/2020/06/14/L4fVgPGAb3Whznr.png"&gt;&lt;/p&gt;
&lt;p&gt;截图包含的信息是：数 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Mon, 16 Nov 2015 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2015-11-16:/2015/11/16/another-system-fault/</guid><category>其他</category><category>笔记</category><category>故障</category></item><item><title>记一次系统故障</title><link>http://youngsterxyf.github.io/2015/10/02/note-of-a-system-fault/</link><description>&lt;p&gt;前段时间，工作中遭遇一次故障，虽然不算什么“疑难杂症”，倒也花了不少时间才真正找到故障的原因，故也值得记录一下。&lt;/p&gt;
&lt;p&gt;为 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Fri, 02 Oct 2015 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2015-10-02:/2015/10/02/note-of-a-system-fault/</guid><category>其他</category><category>笔记</category><category>故障</category></item><item><title>Xhprof安装与使用</title><link>http://youngsterxyf.github.io/2015/09/15/xhprof-installation-and-usage/</link><description>&lt;p&gt;前两天遇到一个PHP代码的bug，分析的结果是：因为要处理的数据量过大，内存分配超出了限制（&lt;code&gt;php.ini&lt;/code&gt;中配置项&lt;code&gt;memory_limit&lt;/code&gt;，默认是128M）。长期使用Python …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Tue, 15 Sep 2015 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2015-09-15:/2015/09/15/xhprof-installation-and-usage/</guid><category>其他</category><category>PHP</category><category>笔记</category><category>Xhprof</category></item><item><title>Yii源码阅读笔记 - 错误/异常处理</title><link>http://youngsterxyf.github.io/2015/09/14/read-yii-code-10/</link><description>&lt;h3&gt;概述&lt;/h3&gt;
&lt;p&gt;PHP区分“错误”（Error）和“异常”（Exception）。“错误”通常是由PHP内部函数抛出，表示运行时问题，当然也可以通过函数&lt;code&gt;trigger_error&lt;/code&gt;或&lt;code&gt;user_error&lt;/code&gt;抛出一个用户级别的error/warning/notice信息。但在 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Mon, 14 Sep 2015 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2015-09-14:/2015/09/14/read-yii-code-10/</guid><category>其他</category><category>PHP</category><category>Yii</category><category>笔记</category><category>总结</category></item><item><title>一行式并行方案（译）</title><link>http://youngsterxyf.github.io/2015/09/11/parallelism-in-one-line/</link><description>&lt;p&gt;原文：&lt;a href="http://chriskiehl.com/article/parallelism-in-one-line/"&gt;Parallelism in one line&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;译者：&lt;a href="https://github.com/youngsterxyf"&gt;youngsterxyf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在并行处理能力方面，Python的声名并不太好。不考虑关于线程和GIL（多数情况下是合理的）的标准论据，我认为Python中关于并行的真正问题并不是一个技术问题，而是教学 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Fri, 11 Sep 2015 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2015-09-11:/2015/09/11/parallelism-in-one-line/</guid><category>其他</category><category>PHP</category><category>翻译</category><category>并行</category></item><item><title>那些Python党踩过的PHP坑</title><link>http://youngsterxyf.github.io/2015/09/05/php-trap-and-tip/</link><description>&lt;p&gt;一看题目貌似本文要准备吐槽PHP，但遇到“坑”主要是因为个人经验不足。&lt;/p&gt;
&lt;h4&gt;JSON反序列化 json_decode&lt;/h4&gt;
&lt;p&gt;函数 &lt;code&gt;json_decode&lt;/code&gt; 默认反序列化的结果是对象。Python党在做PHP开发用到这个方法时，很可能 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Sat, 05 Sep 2015 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2015-09-05:/2015/09/05/php-trap-and-tip/</guid><category>其他</category><category>PHP</category><category>笔记</category></item><item><title>编程名言集锦（译）</title><link>http://youngsterxyf.github.io/2015/06/02/programming-quotes/</link><description>&lt;p&gt;原文：&lt;a href="http://quotes.cat-v.org/programming/"&gt;Programming Quotes&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;译者：&lt;a href="https://github.com/youngsterxyf"&gt;youngsterxyf&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;C.A.R. Hoare, The 1980 ACM Turing Award Lecture&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;There are two ways of constructing a software design: One way is to make it so simple that there are obviously no deficiencies and the other way is to make it so complicated …&lt;/p&gt;&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Tue, 02 Jun 2015 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2015-06-02:/2015/06/02/programming-quotes/</guid><category>其他</category><category>翻译</category><category>感悟</category></item><item><title>Go并发编程基础（译）</title><link>http://youngsterxyf.github.io/2015/05/20/fundamentals-of-concurrent-programming/</link><description>&lt;p&gt;原文：&lt;a href="http://www.nada.kth.se/~snilsson/concurrency/"&gt;Fundamentals of concurrent programming&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;译者：&lt;a href="https://github.com/youngsterxyf"&gt;youngsterxyf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;本文是一篇并发编程方面的入门文章，以&lt;a href="http://golang.org/"&gt;Go语言&lt;/a&gt;编写示例代码，内容涵盖：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;运行期并发线程（goroutines）&lt;/li&gt;
&lt;li&gt;基本的同步 …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Wed, 20 May 2015 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2015-05-20:/2015/05/20/fundamentals-of-concurrent-programming/</guid><category>其他</category><category>翻译</category><category>Golang</category></item><item><title>Yii源码阅读笔记 - 自定义类自动加载</title><link>http://youngsterxyf.github.io/2015/04/10/read-yii-code-9/</link><description>&lt;p&gt;前两天突然发现：之前的阅读笔记对于Yii应用中如何自动加载自定义类的问题没有解释。这里的自定义类是指非Yii框架本身的类。&lt;/p&gt;
&lt;p&gt;关于组件类的配置加载已在 &lt;a href="http://blog.xiayf.cn/2014/11/13/read-yii-code-3/"&gt;Yii源码阅读笔记 - 组件集成&lt;/a&gt; 一文中做了 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Fri, 10 Apr 2015 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2015-04-10:/2015/04/10/read-yii-code-9/</guid><category>其他</category><category>PHP</category><category>Yii</category><category>笔记</category><category>总结</category></item><item><title>Slim源码阅读笔记</title><link>http://youngsterxyf.github.io/2015/03/22/read-slim/</link><description>&lt;p&gt;以前读过 &lt;a href="http://www.phptherightway.com/"&gt;PHP - The Right Way&lt;/a&gt; 一文，
还翻译过其中的 &lt;a href="http://www.phptherightway.com/pages/The-Basics.html"&gt;The Baiscs&lt;/a&gt; 一节
(译文见 &lt;a href="http://blog.xiayf.cn/2013/03/08/php-basics/"&gt;这里&lt;/a&gt;)。&lt;/p&gt;
&lt;p&gt;前两周读了 &lt;a href="http://www.amazon.cn/Modern-PHP-Lockhart-Josh/dp/1491905018/ref=sr_1_1?ie=UTF8&amp;amp;qid=1427031708&amp;amp;sr=8-1&amp;amp;keywords=Modern+PHP"&gt;Modern PHP - New Features and Good Practices&lt;/a&gt; 一书
（读书笔记见&lt;a href="http://blog.xiayf.cn/2015/03/12/read-modern-php/"&gt;这里&lt;/a&gt;），
甚是不 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Sun, 22 Mar 2015 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2015-03-22:/2015/03/22/read-slim/</guid><category>其他</category><category>PHP</category><category>slim</category><category>笔记</category><category>总结</category></item><item><title>读书笔记：Modern PHP - New Features and Good Practices</title><link>http://youngsterxyf.github.io/2015/03/12/read-modern-php/</link><description>&lt;p&gt;&lt;img alt="modern-php" src="https://i.loli.net/2020/06/14/FLWAniqmMGEs8Ja.png"&gt;&lt;/p&gt;
&lt;p&gt;高清无码大图：&lt;a href="https://i.loli.net/2020/06/14/FLWAniqmMGEs8Ja.png"&gt;戳这里&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;推荐阅读！&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Thu, 12 Mar 2015 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2015-03-12:/2015/03/12/read-modern-php/</guid><category>其他</category><category>笔记</category><category>PHP</category></item><item><title>Yii源码阅读笔记 - 日志组件</title><link>http://youngsterxyf.github.io/2015/03/09/read-yii-code-8/</link><description>&lt;h3&gt;使用&lt;/h3&gt;
&lt;p&gt;Yii框架为开发者提供两个静态方法进行日志记录：&lt;/p&gt;
&lt;div class="highlight" style="background: #ffffff"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Yii::log($message, $level, $category);
Yii::trace($message, $category);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;两者的区别在于后者依赖于应用开启调试模式，即定义常量YII_DEBUG：&lt;/p&gt;
&lt;div class="highlight" style="background: #ffffff"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;defined(&amp;#39;YII_DEBUG&amp;#39;) or define(&amp;#39;YII_DEBUG&amp;#39;, true);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Yii::log方法的调用需要指定message的level和category。category是格式为“xxx.yyy.zzz …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Mon, 09 Mar 2015 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2015-03-09:/2015/03/09/read-yii-code-8/</guid><category>其他</category><category>PHP</category><category>Yii</category><category>笔记</category><category>总结</category></item><item><title>又是一年</title><link>http://youngsterxyf.github.io/2015/01/03/the-2014-is-gone/</link><description>&lt;p&gt;又是一年，依照惯例，得写一篇总结和计划。当然计划更多的只是一种自我鼓励，现实总是一次又一次地证明“计划赶不上变 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Sat, 03 Jan 2015 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2015-01-03:/2015/01/03/the-2014-is-gone/</guid><category>其他</category><category>总结</category></item><item><title>Cordova/Phonegap应用构建环境搭建</title><link>http://youngsterxyf.github.io/2014/12/31/setup-cordova-env/</link><description>&lt;p&gt;混合（Hybrid）移动开发将Web开发与原生开发优势互补，之后应该是一个不错的方向。Phonegap是混合移动开发的一个方案，
开发者可以使用标准的Web技术进行开发，然后使用Phonegap打包成原生APP，也可以为Phonegap开发插件来扩展APP功能。
Cordova是Apache的顶级项目，起于Adobe贡献给Apache基金会的Phonegap源码，之后Phonegap官方貌似则专注于提供Phonegap应用的云构建服务 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Wed, 31 Dec 2014 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2014-12-31:/2014/12/31/setup-cordova-env/</guid><category>其他</category><category>笔记</category><category>Cordova</category><category>Phonegap</category></item><item><title>读书笔记：演讲之禅-一个技术演讲家的自白</title><link>http://youngsterxyf.github.io/2014/12/15/read-confessions-of-a-public-speaker/</link><description>&lt;p&gt;大大小小的技术会议参加过不少，关于演讲，从一个听众的角度也有一些心得；随着技术积累能力提升，也希望能够在一些 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Mon, 15 Dec 2014 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2014-12-15:/2014/12/15/read-confessions-of-a-public-speaker/</guid><category>其他</category><category>笔记</category><category>演讲</category></item><item><title>读书笔记：高性能PHP应用开发</title><link>http://youngsterxyf.github.io/2014/12/08/read-high-performance-php-application/</link><description>&lt;p&gt;注：&lt;em&gt;该书的部分内容过时了点 - 比如Opcode缓存：PHP 5.5之后内置一个用于缓存Opcode的组件Opcache，无需额外使用APC组件。所以需要“批判”地阅读。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="mindmap-high-performance-php-application" src="/assets/uploads/pics/High-performance-php-app.png"&gt;&lt;/p&gt;
&lt;p&gt;高清无码大图：&lt;a href="https://raw.githubusercontent.com/youngsterxyf/youngsterxyf.github.com/master/assets/uploads/pics/High-performance-php-app.png"&gt;戳这里&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Mon, 08 Dec 2014 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2014-12-08:/2014/12/08/read-high-performance-php-application/</guid><category>其他</category><category>PHP</category><category>笔记</category></item><item><title>Yii源码阅读笔记 - 应用模块化</title><link>http://youngsterxyf.github.io/2014/11/20/read-yii-code-7/</link><description>&lt;h3&gt;概述&lt;/h3&gt;
&lt;p&gt;Yii框架有个“模块（Module）”的概念，与“应用（Application）”类似，模块必须归属于一个父模块或者一个应用，模块不能单独部署，一个应用不一定要分 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Thu, 20 Nov 2014 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2014-11-20:/2014/11/20/read-yii-code-7/</guid><category>其他</category><category>PHP</category><category>Yii</category><category>笔记</category><category>总结</category></item><item><title>Yii源码阅读笔记 - 缓存</title><link>http://youngsterxyf.github.io/2014/11/19/read-yii-code-6/</link><description>&lt;h3&gt;概述&lt;/h3&gt;
&lt;p&gt;从之前的文章&lt;a href="http://youngsterxyf.github.io/2014/11/12/read-yii-code-2/"&gt;Yii源码阅读笔记 - 路由解析&lt;/a&gt;
及&lt;a href="http://youngsterxyf.github.io/2014/11/14/read-yii-code-4/"&gt;Yii源码阅读笔记 - Model层实现&lt;/a&gt;可以看到Yii框架对于&lt;strong&gt;解析好的路由规则&lt;/strong&gt;及&lt;strong&gt;数据表的schema&lt;/strong&gt;都会根据条件尝试读写缓存
来提高 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Wed, 19 Nov 2014 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2014-11-19:/2014/11/19/read-yii-code-6/</guid><category>其他</category><category>PHP</category><category>Yii</category><category>笔记</category><category>总结</category></item><item><title>Yii源码阅读笔记 - 模板引擎集成</title><link>http://youngsterxyf.github.io/2014/11/18/read-yii-code-5/</link><description>&lt;h3&gt;概述&lt;/h3&gt;
&lt;p&gt;通常我们会使用模板引擎来渲染HTML页面，而不是使用HTML代码中插入PHP代码的方式来编写动态页面。Yii框架中模板引擎也是作为组件引入的，默认ID为viewRenderer，
但从&lt;a href="http://youngsterxyf.github.io/2014/11/13/read-yii-code-3/"&gt;Yii源码阅读笔记 - 组件集成&lt;/a&gt;可以看到Yii Web应用加载的核心组件中并没有viewRenderer，所以需要自己配置。
Yii提供了一个直接可用的模板引擎组件类CPradoViewRenderer（见 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Tue, 18 Nov 2014 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2014-11-18:/2014/11/18/read-yii-code-5/</guid><category>其他</category><category>PHP</category><category>Yii</category><category>笔记</category><category>总结</category></item><item><title>Yii源码阅读笔记 - Model层实现</title><link>http://youngsterxyf.github.io/2014/11/14/read-yii-code-4/</link><description>&lt;h3&gt;概述&lt;/h3&gt;
&lt;p&gt;Yii中，对Model层的使用，有两种方式：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;通过类CDbConnection和CDbCommand来操作&lt;/li&gt;
&lt;li&gt;使用ORM形式：编写model类继承自抽象类CActiveRecord&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;第1种方式的示例如下：&lt;/p&gt;
&lt;div class="highlight" style="background: #ffffff"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #0000ff"&gt;&amp;lt;?php&lt;/span&gt;
$connection = Yii::app()-&amp;gt;db;  &lt;span style="color: #008000"&gt;// 或者Yii::app()-&amp;gt;getComponent(&amp;#39;db&amp;#39;);&lt;/span&gt;
$queryResult = $connection-&amp;gt;createCommand($sql)-&amp;gt;queryRow();
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;第2种方式中编写的model类可能需要实现方法&lt;code&gt;getDbConnection&lt;/code&gt;、&lt;code&gt;model&lt;/code&gt;、&lt;code&gt;tableName&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;在实现上，第2种方式是基于第1种方式的，即 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Fri, 14 Nov 2014 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2014-11-14:/2014/11/14/read-yii-code-4/</guid><category>其他</category><category>PHP</category><category>Yii</category><category>笔记</category><category>总结</category></item><item><title>Yii源码阅读笔记 - 组件集成</title><link>http://youngsterxyf.github.io/2014/11/13/read-yii-code-3/</link><description>&lt;h3&gt;概述&lt;/h3&gt;
&lt;p&gt;Yii框架将各种功能封装成组件，使用时按需配置加载，从而提高应用的性能。内置的组件又分为核心组件与非核心组件，核心组件是任何Web应用和Console应用都需要的。
此外，应 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Thu, 13 Nov 2014 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2014-11-13:/2014/11/13/read-yii-code-3/</guid><category>其他</category><category>PHP</category><category>Yii</category><category>笔记</category><category>总结</category></item><item><title>Yii源码阅读笔记 - 路由解析</title><link>http://youngsterxyf.github.io/2014/11/12/read-yii-code-2/</link><description>&lt;h3&gt;概述&lt;/h3&gt;
&lt;p&gt;Yii框架的路由解析功能由核心组件urlManager来完成。路由的形式有两种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;get：通过URL中查询字符串（query string）参数r来指定路由，如：&lt;code&gt;r=controllerID/actionID&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;path：直接通过URL来指定，如：&lt;code&gt;/controllerID/actionID&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;默认使用get路由形式。由于Yii中controller类命名和action方法都是按照规则命名的，而路由也是按照规则 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Wed, 12 Nov 2014 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2014-11-12:/2014/11/12/read-yii-code-2/</guid><category>其他</category><category>PHP</category><category>Yii</category><category>笔记</category><category>总结</category></item><item><title>读文笔记：An Introduction to APIs</title><link>http://youngsterxyf.github.io/2014/11/09/an-introduction-to-apis/</link><description>&lt;p&gt;原文：&lt;a href="https://zapier.com/learn/apis/"&gt;An Introduction to APIs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;注：该文是入门级别的文章&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="mind-mapping" src="/assets/uploads/pics/An-Introduction-to-APIs.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/youngsterxyf/youngsterxyf.github.com/master/assets/uploads/pics/An-Introduction-to-APIs.png"&gt;高清无码大图&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Sun, 09 Nov 2014 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2014-11-09:/2014/11/09/an-introduction-to-apis/</guid><category>其他</category><category>笔记</category><category>API</category><category>REST</category></item><item><title>Yii源码阅读笔记 - 请求处理基本流程</title><link>http://youngsterxyf.github.io/2014/11/04/read-yii-code-1/</link><description>&lt;p&gt;对于Web框架，我认为其主要有三点作用：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;提供多人协作的基本规范&lt;/li&gt;
&lt;li&gt;避免重复造轮子&lt;/li&gt;
&lt;li&gt;开发者只需关注业务逻辑，脏活（如：基本的安 …&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Tue, 04 Nov 2014 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2014-11-04:/2014/11/04/read-yii-code-1/</guid><category>其他</category><category>PHP</category><category>Yii</category><category>笔记</category><category>总结</category></item><item><title>QCon上海2014大会见闻录</title><link>http://youngsterxyf.github.io/2014/10/21/qcon-sh-2014-seen-heard/</link><description>&lt;h2&gt;技术&lt;/h2&gt;
&lt;h4&gt;主题演讲&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;软件项目变更的管理和生存之道&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;个人对这个演讲的印象比较深。演讲者即是最近比较火的《Java程序员修炼之道》一书的作者 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Tue, 21 Oct 2014 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2014-10-21:/2014/10/21/qcon-sh-2014-seen-heard/</guid><category>其他</category><category>笔记</category><category>总结</category></item><item><title>中心化日志记录架构（译）</title><link>http://youngsterxyf.github.io/2014/10/14/centralized-logging-architecture/</link><description>&lt;p&gt;原文：&lt;a href="http://jasonwilder.com/blog/2013/07/16/centralized-logging-architecture/"&gt;Centralized Logging Architecture&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;译者：&lt;a href="https://github.com/youngsterxyf"&gt;youngsterxyf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在&lt;a href="http://jasonwilder.com/blog/2012/01/03/centralized-logging/"&gt;中心化日志记录&lt;/a&gt;一文中，我介绍了几个工具，用于解决中心化日志记录的问题。但这些工具一般仅能 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Tue, 14 Oct 2014 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2014-10-14:/2014/10/14/centralized-logging-architecture/</guid><category>其他</category><category>翻译</category><category>日志</category><category>架构</category></item><item><title>流行PHP项目的phpmetrics分析（译）</title><link>http://youngsterxyf.github.io/2014/09/22/phpmetrics-of-popular-php-projects/</link><description>&lt;p&gt;原文：&lt;a href="https://peteraba.com/blog/phpmetrics-of-popular-projects/"&gt;phpmetrics of popular php projects&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;译者：&lt;a href="https://github.com/youngsterxyf"&gt;youngsterxyf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;之前我偶然发现一个名为&lt;a href="http://www.phpmetrics.org/"&gt;phpmetrics&lt;/a&gt;的新工具，可用于计算及展示php的度量指标。我当时立马喜欢上了这个工具，并决 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Mon, 22 Sep 2014 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2014-09-22:/2014/09/22/phpmetrics-of-popular-php-projects/</guid><category>其他</category><category>翻译</category><category>PHP</category></item><item><title>RESTful API设计的一点经验</title><link>http://youngsterxyf.github.io/2014/09/06/experience-about-restful-api/</link><description>&lt;p&gt;前段时间的工作涉及产品开放API的设计与实现，整个过程大致可分为以下几个步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;根据需求、原有数据库设计等，花了半天左右的工夫 …&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Sat, 06 Sep 2014 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2014-09-06:/2014/09/06/experience-about-restful-api/</guid><category>其他</category><category>笔记</category><category>RESTful</category></item><item><title>基于socket.io的实时消息推送</title><link>http://youngsterxyf.github.io/2014/09/06/socket.io-push-server/</link><description>&lt;p&gt;用户访问Web站点的过程是基于HTTP协议的，而HTTP协议的工作模式是：请求-响应，客户端发出访问请求，服务器端以资源数据响应请求。
也就是说，服务器端始终是被动的，即使服 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Sat, 06 Sep 2014 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2014-09-06:/2014/09/06/socket.io-push-server/</guid><category>其他</category><category>socket.io</category><category>消息推送</category><category>笔记</category></item><item><title>面向分布式系统工程师的分布式系统理论（译）</title><link>http://youngsterxyf.github.io/2014/08/10/Distributed-systems-theory-for-the-distributed-systems-engineer/</link><description>&lt;p&gt;原文：&lt;a href="http://the-paper-trail.org/blog/distributed-systems-theory-for-the-distributed-systems-engineer/"&gt;Distributed systems theory for the distributed systems engineer&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;译者：&lt;a href="https://github.com/youngsterxyf"&gt;youngsterxyf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Gwen Shapira，大腕级的解决方案架构师（SA），如今 Cloudera 的全职工程师，在&lt;a href="https://twitter.com/gwenshap/status/497203248332165121"&gt; Twitter 上提的一个问题&lt;/a&gt;引起了我的 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Sun, 10 Aug 2014 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2014-08-10:/2014/08/10/Distributed-systems-theory-for-the-distributed-systems-engineer/</guid><category>其他</category><category>分布式系统</category><category>翻译</category></item><item><title>技术问题一问一答</title><link>http://youngsterxyf.github.io/2014/06/26/recently-technology-tips/</link><description>&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;如何方便地删除某目录下所有空文件？&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;find . -size 0 -exec rm {} \;&lt;/code&gt; 或 &lt;code&gt;find . -size 0 | xargs rm -f&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;find默认会递归遍历所有子目录，如果想只在当前目录查找，可以添加参数&lt;code&gt;-prune&lt;/code&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;如何查 …&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Thu, 26 Jun 2014 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2014-06-26:/2014/06/26/recently-technology-tips/</guid><category>其他</category><category>笔记</category></item><item><title>微信服务号开发笔记</title><link>http://youngsterxyf.github.io/2014/06/14/wechat-service-account-development/</link><description>&lt;h3&gt;原理&lt;/h3&gt;
&lt;p&gt;微信服务号的原理比较简单。从请求响应角度来看，逻辑是：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;用户微信客户端 &amp;lt;---&amp;gt; 微信服务器 &amp;lt;---&amp;gt; 微信服务号后台程序 &amp;lt;---&amp;gt; 数据库 …&lt;/strong&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Sat, 14 Jun 2014 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2014-06-14:/2014/06/14/wechat-service-account-development/</guid><category>其他</category><category>微信</category><category>PHP</category><category>笔记</category></item><item><title>高流量站点NGINX与PHP-fpm配置优化（译）</title><link>http://youngsterxyf.github.io/2014/05/03/optimizing-nginx-and-php-fpm-for-high-traffic-sites/</link><description>&lt;p&gt;原文：&lt;a href="http://www.softwareprojects.com/resources/programming/t-optimizing-nginx-and-php-fpm-for-high-traffic-sites-2081.html"&gt;Optimizing NGINX and PHP-fpm for high traffic sites&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;译者：&lt;a href="https://github.com/youngsterxyf/"&gt;youngsterxyf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;使用Nginx搭配PHP已有7年的这份经历让我们学会如何为高流量站点优化NGINX和PHP-fpm配置。&lt;/p&gt;
&lt;p&gt;以下正是这方面的一些提示和建议：&lt;/p&gt;
&lt;h4&gt;1. 将TCP切换为UNIX域套接字&lt;/h4&gt;
&lt;p&gt;UNIX域套接字相比TCP套接字在loopback接口上能提供更好的性能（更少的数据拷贝和上下文切换）。&lt;/p&gt;
&lt;p&gt;但有 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Sat, 03 May 2014 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2014-05-03:/2014/05/03/optimizing-nginx-and-php-fpm-for-high-traffic-sites/</guid><category>其他</category><category>Nginx</category><category>PHP</category><category>服务器</category></item><item><title>Firefox中“max-width:100%”不兼容问题</title><link>http://youngsterxyf.github.io/2014/04/28/max-width-in-firefox/</link><description>&lt;p&gt;这个博客是基于“&lt;a href="http://docs.getpelican.com/en/3.3.0/"&gt;Pelican&lt;/a&gt; + &lt;a href="http://wowubuntu.com/markdown/"&gt;Markdown&lt;/a&gt; +
&lt;a href="https://github.com/youngsterxyf/my-pelican-themes/tree/master/my-gum"&gt;定制的my-gum主题&lt;/a&gt;”的。定制的主题将博文正文页面的
右边栏去掉，这导致在Firefox等浏览器中，正文中大的图片会突破正文块 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Mon, 28 Apr 2014 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2014-04-28:/2014/04/28/max-width-in-firefox/</guid><category>其他</category><category>CSS</category><category>浏览器兼容</category><category>JavaScript</category></item><item><title>Windows命令提示符中统计行数（译）</title><link>http://youngsterxyf.github.io/2014/03/05/counting-lines-in-cmd/</link><description>&lt;p&gt;原文：&lt;a href="http://rickardnobel.se/counting-lines-in-windows-command-prompt/"&gt;Counting lines in Windows command prompt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;译者：&lt;a href="https://github.com/youngsterxyf"&gt;youngsterxyf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;使用内置工具FIND统计cmd.exe输出的行数非常方便！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在命令行环境中工作时，能够统计不同工具的输出结果的行数有时会非常 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Wed, 05 Mar 2014 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2014-03-05:/2014/03/05/counting-lines-in-cmd/</guid><category>其他</category><category>Windows</category><category>翻译</category></item><item><title>读书笔记：Web容量规划的艺术</title><link>http://youngsterxyf.github.io/2014/02/25/read-the-art-of-capacity-planning/</link><description>&lt;h3&gt;第1章 容量规划的目标、问题和过程&lt;/h3&gt;
&lt;p&gt;了解你的基础设施中每一部分何时会失败（最好不发生）对容量规划至关重要。&lt;/p&gt;
&lt;p&gt;假设你有 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Tue, 25 Feb 2014 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2014-02-25:/2014/02/25/read-the-art-of-capacity-planning/</guid><category>其他</category><category>笔记</category><category>容量规划</category></item><item><title>如何实现Golang的http请求处理中间件（译）</title><link>http://youngsterxyf.github.io/2014/01/17/golang-http-handlers-as-middleware/</link><description>&lt;p&gt;原文：&lt;a href="http://capotej.com/blog/2013/10/07/golang-http-handlers-as-middleware/"&gt;Golang Http Handlers as Middleware&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;译者：&lt;a href="https://github.com/youngsterxyf"&gt;youngsterxyf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;大多数现代Web组件栈允许通过栈式/组件式中间件“过滤”请求，这样就能干净地从web应用中分离出横切关注点（译注：面向方面程序设计中的概念？）。
本 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Fri, 17 Jan 2014 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2014-01-17:/2014/01/17/golang-http-handlers-as-middleware/</guid><category>其他</category><category>Golang</category><category>翻译</category><category>中间件</category></item><item><title>为何Goroutine的栈空间可以无限大？（译）</title><link>http://youngsterxyf.github.io/2014/01/17/goroutine-stack-infinite/</link><description>&lt;p&gt;原文：&lt;a href="http://dave.cheney.net/2013/06/02/why-is-a-goroutines-stack-infinite"&gt;Why is a Goroutine's stack infinite?&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;译者：&lt;a href="https://github.com/youngsterxyf"&gt;youngsterxyf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Go编程新手可能会偶然发现&lt;a href="http://golang.org/"&gt;Go语言&lt;/a&gt;---与一个Goroutine可用栈空间大小相关---的一个古怪特性。这通常是由于程序员
无意间构造了一个无限递归函数调用而产生的。为了阐明 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Fri, 17 Jan 2014 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2014-01-17:/2014/01/17/goroutine-stack-infinite/</guid><category>其他</category><category>Golang</category><category>翻译</category></item><item><title>Go - 以任意类型的slices作为输入参数（译）</title><link>http://youngsterxyf.github.io/2014/01/16/go-input-slices-any-type/</link><description>&lt;p&gt;原文：&lt;a href="https://ahmetalpbalkan.com/blog/golang-take-slices-of-any-type-as-input-parameter/"&gt;Go – taking slices of any type as input parameters&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;译者：&lt;a href="https://github.com/youngsterxyf"&gt;youngsterxyf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;最近参与的一个业余项目，&lt;a href="https://github.com/ahmetalpbalkan/go-linq"&gt;go-linq&lt;/a&gt;，让我了解到Go语言的类型系统并不是为任何类面向
对象编程而设计的。没有泛型，没有类型继承 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Thu, 16 Jan 2014 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2014-01-16:/2014/01/16/go-input-slices-any-type/</guid><category>其他</category><category>Golang</category><category>翻译</category></item><item><title>回顾2013，展望2014</title><link>http://youngsterxyf.github.io/2014/01/06/review13-lookin14/</link><description>&lt;p&gt;2013已经过去了。&lt;/p&gt;
&lt;p&gt;时间消逝得太快，以至于很多事情在记忆上相互重叠，无法明确区分事情发生的时间点。那么该如何回顾这过去的一年 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Mon, 06 Jan 2014 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2014-01-06:/2014/01/06/review13-lookin14/</guid><category>其他</category><category>总结</category></item><item><title>微博"收藏/赞/转发"技术资料汇总</title><link>http://youngsterxyf.github.io/2013/12/28/weibo_tech_resources_summary/</link><description>&lt;p&gt;使用新浪微博，我很少发状态，主要是跟踪技术圈的一些动态，技术牛人们都在搞些什么东东，因而收藏和转发了一些优秀 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Sat, 28 Dec 2013 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2013-12-28:/2013/12/28/weibo_tech_resources_summary/</guid><category>其他</category><category>微博</category><category>技术</category></item><item><title>IE下JavaScript Date对象的不同之处</title><link>http://youngsterxyf.github.io/2013/12/03/date_difference_in_ie/</link><description>&lt;p&gt;之前在&lt;a href="http://youngsterxyf.github.io/2013/11/29/inner_warehouse_monitor_system/"&gt;仓库作业机器监控系统&lt;/a&gt;项目中使用&lt;a href="http://www.highcharts.com/demo/line-time-series"&gt;HighCharts的时间序列数据图&lt;/a&gt;来绘制机器CPU使用率、内存使用量、网络流量趋势变化图等，这些图在IE下却没有正常显示，IE也没有报错，按理说HighCharts的IE兼容性是较好的 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Tue, 03 Dec 2013 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2013-12-03:/2013/12/03/date_difference_in_ie/</guid><category>其他</category><category>JavaScript</category><category>笔记</category></item><item><title>某运营平台架构调整</title><link>http://youngsterxyf.github.io/2013/12/02/operation_platform_arch_change/</link><description>&lt;p&gt;之前在&lt;a href="http://youngsterxyf.github.io/2013/10/15/standardization-operation-development/"&gt;运营开发规范化&lt;/a&gt;一文中提过工作中涉及一个&lt;strong&gt;运营平台&lt;/strong&gt;。曾有段时间我一直吐槽该平台的代码实现有多烂，各种功 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Mon, 02 Dec 2013 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2013-12-02:/2013/12/02/operation_platform_arch_change/</guid><category>其他</category><category>架构</category><category>笔记</category></item><item><title>HAProxyConsole简介</title><link>http://youngsterxyf.github.io/2013/12/02/re_introduce_haproxyconsole/</link><description>&lt;p&gt;之前在&lt;a href="http://youngsterxyf.github.io/2013/11/01/unescape-html-in-golang-html_template/"&gt;Golang中如何让html/template不转义html标签&lt;/a&gt;、&lt;a href="http://youngsterxyf.github.io/2013/10/16/high-availability-load-balancer-and-dns/"&gt;搭建高可用负载均衡组件及缓存DNS&lt;/a&gt;两篇文章中都提到为了方便使用HAProxy，我实现了一个简单的HAProxy负载均衡任务管理系统。前些天我把 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Mon, 02 Dec 2013 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2013-12-02:/2013/12/02/re_introduce_haproxyconsole/</guid><category>其他</category><category>HAProxy</category><category>Keepalived</category><category>负载均衡</category><category>笔记</category><category>总结</category></item><item><title>仓库作业机器监控系统设计与实现</title><link>http://youngsterxyf.github.io/2013/11/29/inner_warehouse_monitor_system/</link><description>&lt;p&gt;近期在参与一个仓库作业机器监控项目。该项目的需求背景是：公司的电商业务在全国各地有多处或大或小的仓库，仓库 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Fri, 29 Nov 2013 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2013-11-29:/2013/11/29/inner_warehouse_monitor_system/</guid><category>其他</category><category>技术</category><category>总结</category><category>笔记</category><category>Golang</category></item><item><title>读书笔记：Just For Fun - The Story of an Accidental Revolutionary</title><link>http://youngsterxyf.github.io/2013/11/07/read-just_for_fun/</link><description>&lt;p&gt;前些天偶然在图灵社区上看到&lt;a href="http://www.ituring.com.cn/book/1115?q=%E8%B6%8A%E7%8E%A9%E8%B6%8A%E5%A4%A7"&gt;这本书的出版计划&lt;/a&gt;，才猛然想起之前看过一两个章节，遂再次找到该书的&lt;a href="http://ishare.iask.sina.com.cn/f/14439267.html"&gt;中文电子版&lt;/a&gt;（&lt;em&gt;原谅 …&lt;/em&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Thu, 07 Nov 2013 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2013-11-07:/2013/11/07/read-just_for_fun/</guid><category>其他</category><category>阅读</category><category>笔记</category></item><item><title>修改PyPI源</title><link>http://youngsterxyf.github.io/2013/11/01/change-pypi-mirror/</link><description>&lt;p&gt;使用easy_install或pip安装Python第三方库，默认的源地址是：https://pypi.python.org/simple/ 。使用该源有两个问题:&lt;/p&gt;
&lt;p&gt;1.
国内访问速度较慢&lt;/p&gt;
&lt;p&gt;2.
由于该源使用https协议，若机器上没有安装openssl或ssl配置不对 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Fri, 01 Nov 2013 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2013-11-01:/2013/11/01/change-pypi-mirror/</guid><category>其他</category><category>Python</category><category>PyPI</category><category>pip</category><category>easy_install</category><category>ssl</category></item><item><title>Golang中如何让html/template不转义html标签</title><link>http://youngsterxyf.github.io/2013/11/01/unescape-html-in-golang-html_template/</link><description>&lt;p&gt;近期在使用Golang的&lt;a href="http://golang.org/pkg/net/http/"&gt;net/http&lt;/a&gt;和&lt;a href="http://golang.org/pkg/html/template/"&gt;html/template&lt;/a&gt;开发一个简单的HAProxy负载均衡任务管理系统（见&lt;a href="http://youngsterxyf.github.io/2013/10/16/high-availability-load-balancer-and-dns/"&gt;搭建高可用负载均衡组件及缓存DNS&lt;/a&gt;一文说明）。&lt;/p&gt;
&lt;p&gt;&lt;a href="http://golang.org/pkg/html/template/"&gt;htmp/template&lt;/a&gt;在渲染页面模板的时 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Fri, 01 Nov 2013 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2013-11-01:/2013/11/01/unescape-html-in-golang-html_template/</guid><category>其他</category><category>Golang</category><category>template</category></item><item><title>学在腾讯：简而美的微信后台架构</title><link>http://youngsterxyf.github.io/2013/10/23/learning-in-tencent-backend-arch-of-weixin/</link><description>&lt;p&gt;注：&lt;em&gt;公司分享讲座的一点笔记，不保证准确性。&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;问题&lt;/h2&gt;
&lt;h4&gt;极致的业务特性&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;流畅的消息收发&lt;/li&gt;
&lt;li&gt;及时的通知&lt;/li&gt;
&lt;li&gt;省电&lt;/li&gt;
&lt;li&gt;省流量&lt;/li&gt;
&lt;li&gt;瘦客户端&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;困难 …&lt;/h4&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Wed, 23 Oct 2013 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2013-10-23:/2013/10/23/learning-in-tencent-backend-arch-of-weixin/</guid><category>其他</category><category>腾讯</category><category>微信</category><category>架构</category></item><item><title>搭建高可用负载均衡组件及缓存DNS</title><link>http://youngsterxyf.github.io/2013/10/16/high-availability-load-balancer-and-dns/</link><description>&lt;p&gt;该项工作，如题所示，主要分为两部分：高可用负载均衡组件、缓存DNS。&lt;/p&gt;
&lt;h3&gt;高可用负载均衡组件&lt;/h3&gt;
&lt;p&gt;需求：优化业务系统架构中某些关 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Wed, 16 Oct 2013 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2013-10-16:/2013/10/16/high-availability-load-balancer-and-dns/</guid><category>其他</category><category>高可用</category><category>负载均衡</category><category>HAProxy</category><category>Keepalived</category><category>HAProxyConsole</category><category>DNS</category><category>BIND</category></item><item><title>运营开发规范化</title><link>http://youngsterxyf.github.io/2013/10/15/standardization-operation-development/</link><description>&lt;p&gt;今年3月底毕业，入职腾讯做运营开发，至今6个月有余。入职之时组内仅有1个运营开发的同事，到目前已扩充到5人，加3个实习生。&lt;/p&gt;
&lt;p&gt;入职之时的运营开发过程是这样的：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在 …&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Tue, 15 Oct 2013 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2013-10-15:/2013/10/15/standardization-operation-development/</guid><category>其他</category><category>服务器</category><category>Linux</category><category>Git</category><category>Golang</category><category>Python</category></item><item><title>一项工作中涉及的几个命令</title><link>http://youngsterxyf.github.io/2013/10/14/several-command-in-one-task/</link><description>&lt;p&gt;今天写了点shell脚本，在一些CentOS服务器上进行了一些操作，涉及如下命令：&lt;/p&gt;
&lt;h3&gt;统计特定进程个数&lt;/h3&gt;
&lt;p&gt;如统计haproxy进程的个数&lt;/p&gt;
&lt;div class="highlight" style="background: #ffffff"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ps -e | grep haproxy | wc -l
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;获取特定进程的pid&lt;/h3&gt;
&lt;p&gt;如获取haproxy进程的pid&lt;/p&gt;
&lt;div class="highlight" style="background: #ffffff"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ps -e | grep haproxy …&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Mon, 14 Oct 2013 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2013-10-14:/2013/10/14/several-command-in-one-task/</guid><category>其他</category><category>Linux</category><category>命令行</category></item><item><title>从URL监控问题谈网站Web架构</title><link>http://youngsterxyf.github.io/2013/10/12/url-monitoring-and-web-arch/</link><description>&lt;p&gt;之前工作中实现了一个对站点进行URL监控的功能。原理是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;cron脚本定时从一台Nginx服务器上获得Nginx配置文件（包括upstream配置），在解析配置得到：&lt;code&gt;域名-&amp;gt;upstream名&lt;/code&gt;（可能有多个）、&lt;code&gt;upstream名-&amp;gt;属于该upstream的服务器ip列表&lt;/code&gt;，存入数据库；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;用户 …&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Sat, 12 Oct 2013 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2013-10-12:/2013/10/12/url-monitoring-and-web-arch/</guid><category>其他</category><category>监控</category><category>架构</category><category>Web</category><category>工作笔记</category></item><item><title>通过示例学习Git内部构造（译）</title><link>http://youngsterxyf.github.io/2013/09/28/learning-git-internals-by-example/</link><description>&lt;p&gt;原文：&lt;a href="http://teohm.github.io/blog/2011/05/30/learning-git-internals-by-example/"&gt;Learning Git Internals by Example&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;译者：&lt;a href="https://github.com/youngsterxyf"&gt;youngsterxyf&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;状态：草稿&lt;/p&gt;
&lt;p&gt;计划修订本文，未来可能会简化一些...&lt;/p&gt;
&lt;h2&gt;动机&lt;/h2&gt;
&lt;p&gt;从Subversion和Mercurial切换到Git之后的几个月，我始终觉得Git在本质上是不同于Subversion和Mercurial的，但没法确切地说出区别。
我 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Sat, 28 Sep 2013 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2013-09-28:/2013/09/28/learning-git-internals-by-example/</guid><category>其他</category><category>Git</category><category>翻译</category></item><item><title>时间的心</title><link>http://youngsterxyf.github.io/2013/08/22/heart-of-time/</link><description>&lt;p&gt;近期工作生活的一点心得：&lt;/p&gt;
&lt;h3&gt;珍惜自己的时间&lt;/h3&gt;
&lt;p&gt;乐于助人是好事，但，是需要耗费时间的，那么在助人之前就得确认帮助别人所 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Thu, 22 Aug 2013 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2013-08-22:/2013/08/22/heart-of-time/</guid><category>其他</category><category>总结</category><category>自省</category></item><item><title>Y分钟学会Python（译）</title><link>http://youngsterxyf.github.io/2013/06/29/learn-python-in-y-minutes/</link><description>&lt;p&gt;原文：&lt;a href="http://learnxinyminutes.com/docs/python/"&gt;Learn Python in Y Minutes&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;译者：&lt;a href="https://github.com/youngsterxyf"&gt;youngsterxyf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python由Guido Van Rossum发明于90年代初期，是目前最流行的编程语言之一，因其语法的清晰简洁我爱上了Python，其代码基本上可以
说是 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Sat, 29 Jun 2013 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2013-06-29:/2013/06/29/learn-python-in-y-minutes/</guid><category>其他</category><category>Python</category><category>翻译</category></item><item><title>FTP是90年代的，使用Git取代它来部署代码吧！（译）</title><link>http://youngsterxyf.github.io/2013/06/24/deploy-via-git/</link><description>&lt;p&gt;原文：&lt;a href="https://coderwall.com/p/xczkaq?&amp;amp;p=1&amp;amp;q="&gt;FTP is so 90's. Let's deploy via Git instead!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;译者：&lt;a href="https://github.com/youngsterxyf"&gt;youngsterxyf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;首先，在你的服务器上创建一个目录，并在其中初始化一个空的git仓库。我喜欢使用&lt;code&gt;~/www/&lt;/code&gt;目录来 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Mon, 24 Jun 2013 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2013-06-24:/2013/06/24/deploy-via-git/</guid><category>其他</category><category>Git</category><category>翻译</category></item><item><title>搭建测试服务器(源码编译方式)</title><link>http://youngsterxyf.github.io/2013/06/18/setup-testing-server/</link><description>&lt;p&gt;目前工作中开发流程还比较初级，甚至连测试服务器都没有，代码的变更都是直接先在开发人员的本地机器上简单测试 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Tue, 18 Jun 2013 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2013-06-18:/2013/06/18/setup-testing-server/</guid><category>其他</category><category>Linux</category><category>PHP</category><category>MySQL</category><category>Nginx</category><category>服务器</category><category>Python</category><category>Git</category></item><item><title>PHP最佳实践（译）</title><link>http://youngsterxyf.github.io/2013/06/01/php-best-practices/</link><description>&lt;p&gt;原文： &lt;a href="https://phpbestpractices.org/"&gt;PHP Best Practices-A short, practical guide for common and confusing PHP tasks&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;译者：&lt;a href="https://github.com/youngsterxyf"&gt;youngsterxyf&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;最后修订日期&amp;amp;维护者&lt;/h2&gt;
&lt;p&gt;本文档最后审阅于2013年3月8日。最后修改于2013年5月8日。&lt;/p&gt;
&lt;p&gt;由我，&lt;a href="https://alexcabal.com/"&gt;Alex Cabal&lt;/a&gt;，维护该文档 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Sat, 01 Jun 2013 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2013-06-01:/2013/06/01/php-best-practices/</guid><category>其他</category><category>翻译</category><category>PHP</category></item><item><title>城市的日子</title><link>http://youngsterxyf.github.io/2013/05/19/life-of-city/</link><description>&lt;p&gt;我仍须一个人&lt;br /&gt;
面对这个城市，&lt;br /&gt;
以及如此雷同的日复日。&lt;br /&gt;
&lt;br /&gt;
电话、网络，&lt;br /&gt;
工作、技术、阅读、爱好，&lt;br /&gt;
朋友，&lt;br /&gt;
还有我的思考，&lt;br /&gt;
都改变不了，&lt;br /&gt;
这城市 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Sun, 19 May 2013 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2013-05-19:/2013/05/19/life-of-city/</guid><category>其他</category><category>诗歌</category><category>笔记</category><category>生活</category></item><item><title>编译安装MemcacheQ</title><link>http://youngsterxyf.github.io/2013/04/27/compile-and-install-memcacheq/</link><description>&lt;p&gt;MemcacheQ是一个MemcacheDB的变种，用来提供简单的消息队列服务。（注：MemcacheDB并不是一个数据缓存解决方案，而是一个为数据持久化设计的分布式的键-值对数据存储系统，采用memcache协议，以BerkeleyDB作为存储后端，&lt;a href="http://memcachedb.org/"&gt;主页&lt;/a&gt;）。&lt;/p&gt;
&lt;p&gt;MemcacheQ依赖于BerkeleyDB和libevent …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Sat, 27 Apr 2013 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2013-04-27:/2013/04/27/compile-and-install-memcacheq/</guid><category>其他</category><category>笔记</category><category>工作</category><category>服务器</category><category>技术</category></item><item><title>工作中的技术人</title><link>http://youngsterxyf.github.io/2013/04/23/technical-person/</link><description>&lt;p&gt;工作入职半个月，有些事情不太顺利，还没有正式上手工作，也许大公司的节奏便是如此，但我内心是比较急的，希望能尽快 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Tue, 23 Apr 2013 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2013-04-23:/2013/04/23/technical-person/</guid><category>其他</category><category>工作</category><category>感悟</category></item><item><title>Windows上安装PHP开发测试环境</title><link>http://youngsterxyf.github.io/2013/04/15/install-php-development-environment-on-windows/</link><description>&lt;p&gt;先从HTTP请求处理流程图来看看我们所需的PHP开发测试环境包含哪些组件。&lt;/p&gt;
&lt;p&gt;&lt;img src="/assets/uploads/pics/php-development-env.jpg" alt="PHP开发测试环境"&gt;&lt;/p&gt;
&lt;p&gt;从图中可以看出系统包含如下几种组件之间的交互：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Nginx与PHP-CGI(PHP)的交互&lt;/li&gt;
&lt;li&gt;PHP-CGI(PHP)与文件系统、分布式内存对象缓存系统、数据 …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Mon, 15 Apr 2013 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2013-04-15:/2013/04/15/install-php-development-environment-on-windows/</guid><category>其他</category><category>笔记</category><category>PHP</category></item><item><title>弄清问题，再求解决</title><link>http://youngsterxyf.github.io/2013/04/09/understand-before-solve/</link><description>&lt;p&gt;今天同事问我：是否有什么python库或工具能够将网页内容转换成图片格式的。他在做这方面的事情，还没有好的方法，因为觉得我对python比较熟悉，所以问一下。&lt;/p&gt;
&lt;p&gt;但是我从一开始我就犯 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Tue, 09 Apr 2013 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2013-04-09:/2013/04/09/understand-before-solve/</guid><category>其他</category><category>笔记</category><category>工作</category></item><item><title>argparse - 命令行选项与参数解析（译）</title><link>http://youngsterxyf.github.io/2013/03/30/argparse/</link><description>&lt;p&gt;原文：&lt;a href="http://pymotw.com/2/argparse/"&gt;argparse – Command line option and argument parsing&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;译者：&lt;a href="https://github.com/youngsterxyf"&gt;youngsterxyf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;argparse模块作为optparse的一个替代被添加到Python2.7。argparse的实现支持一些不易于添加到optparse以及要求向后不兼容API变化的特性，因此以一个新模块添加到标准库。&lt;/p&gt;
&lt;h3&gt;与optparse相比较&lt;/h3&gt;
&lt;p&gt;argparse的API类似于optparse，甚至在很多情况下通过更新所使用的类名 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Sat, 30 Mar 2013 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2013-03-30:/2013/03/30/argparse/</guid><category>其他</category><category>Python</category><category>翻译</category></item><item><title>读文笔记：What Powers Instagram</title><link>http://youngsterxyf.github.io/2013/03/27/what-powers-instagram/</link><description>&lt;p&gt;原文：&lt;a href="http://instagram-engineering.tumblr.com/post/13649370142/what-powers-instagram-hundreds-of-instances-dozens-of"&gt;What Powers Instagram: Hundreds of Instances, Dozens of Technologies&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;该文从多个方面介绍Instagram整个系统栈(stack)的组成，罗列所使用的组件。我觉得重要的不是用了哪些组件和工具 …&lt;/em&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Wed, 27 Mar 2013 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2013-03-27:/2013/03/27/what-powers-instagram/</guid><category>其他</category><category>笔记</category></item><item><title>学习JavaScript - 我的经验与建议（译）</title><link>http://youngsterxyf.github.io/2013/03/25/learning-js/</link><description>&lt;p&gt;原文：&lt;a href="http://sivers.org/learn-js"&gt;learning JavaScript - my experience and advice&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;译者：&lt;a href="https://github.com/youngsterxyf"&gt;youngsterxyf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;自从我曾&lt;a href="http://sivers.org/os"&gt;几&lt;/a&gt;&lt;a href="http://sivers.org/srs"&gt;次&lt;/a&gt;&lt;a href="http://sivers.org/prog"&gt;提到&lt;/a&gt;自己在刚过去的几个月中学习了JavaScript，很多人就发email给我询问我是如何学习JavaScript的以及推荐如何学习。以下就是我的经验和最 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Mon, 25 Mar 2013 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2013-03-25:/2013/03/25/learning-js/</guid><category>其他</category><category>JavaScript</category><category>翻译</category></item><item><title>pip install lxml编译失败问题解决</title><link>http://youngsterxyf.github.io/2013/03/17/pip-install-lxml-problem/</link><description>&lt;p&gt;以前在遇到这个问题时，都是偷懒使用&lt;code&gt;sudo apt-get install python-lxml&lt;/code&gt;（Debian系的Linux发行版）直接安装已打包好的deb包。但一方面这样安装的不是最新的库，另一方面 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Sun, 17 Mar 2013 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2013-03-17:/2013/03/17/pip-install-lxml-problem/</guid><category>其他</category><category>Python</category></item><item><title>读书笔记：JavaScript语言精粹</title><link>http://youngsterxyf.github.io/2013/03/14/read-js-thegoodparts/</link><description>&lt;h2&gt;第2章：语法&lt;/h2&gt;
&lt;p&gt;JavaScript提供两种注释形式，一种是用&lt;code&gt;/* */&lt;/code&gt;包围的注释块，另一种是以&lt;code&gt;//&lt;/code&gt;为开头的行注释。
建议避免使用&lt;code&gt;/* */&lt;/code&gt;，而用&lt;code&gt;//&lt;/code&gt;注释代替它。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;标识符由一个字母开头 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Thu, 14 Mar 2013 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2013-03-14:/2013/03/14/read-js-thegoodparts/</guid><category>其他</category><category>笔记</category><category>JavaScript</category></item><item><title>JavaScript初学者应知的24条最佳实践（译）</title><link>http://youngsterxyf.github.io/2013/03/11/js-best-practices-for-beginners/</link><description>&lt;p&gt;原文：&lt;a href="http://net.tutsplus.com/tutorials/javascript-ajax/24-javascript-best-practices-for-beginners/"&gt;24 JavaScript Best Practices for Beginners&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;译者：&lt;a href="https://github.com/youngsterxyf"&gt;youngsterxyf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;（注：阅读原文的时候没有注意发布日期，觉得不错就翻译了，翻译到JSON.parse那一节觉得有点不对路才发现是2009年发布的文章，不过还是不错的啦。另外 …&lt;/em&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Mon, 11 Mar 2013 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2013-03-11:/2013/03/11/js-best-practices-for-beginners/</guid><category>其他</category><category>JavaScript</category><category>翻译</category></item><item><title>电脑重装记</title><link>http://youngsterxyf.github.io/2013/03/09/reinstall-my-computer/</link><description>&lt;p&gt;一台电脑使用时间长了，速度就会越来越慢，也会越来越“脏”，因为经过时间的积累，电脑里多了很多的软件、文件等，这些文件 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Sat, 09 Mar 2013 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2013-03-09:/2013/03/09/reinstall-my-computer/</guid><category>其他</category><category>笔记</category></item><item><title>PHP之道---PHP基础知识（译）</title><link>http://youngsterxyf.github.io/2013/03/08/php-basics/</link><description>&lt;p&gt;原文：&lt;a href="http://wulijun.github.com/php-the-right-way/pages/The-Basics.html"&gt;PHP: The Right Way - The Basics&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;译者：&lt;a href="http://github.com/youngsterxyf"&gt;youngsterxyf&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;比较操作符&lt;/h2&gt;
&lt;p&gt;比较操作符往往是PHP的一个被忽视的方面，这会导致很多意想不到的结果。其中的一个问题源于严格比 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Fri, 08 Mar 2013 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2013-03-08:/2013/03/08/php-basics/</guid><category>其他</category><category>PHP</category><category>翻译</category></item><item><title>数据压缩理论简介（译）</title><link>http://youngsterxyf.github.io/2013/02/27/A-introduction-to-compression/</link><description>&lt;p&gt;原文：&lt;a href="http://imrannazar.com/An-Introduction-to-Compression"&gt;A introduction to compression&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;译者：&lt;a href="https://github.com/youngsterxyf"&gt;youngsterxyf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;最近我在思考GIF和JPEG图片格式之间的不同：为什么某些图片存储为GIF格式所占的磁盘空间更大，而另一些图片以JPEG格式存储要占用更大的磁盘空间？事实证明，这是因为不同的图片格式 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Wed, 27 Feb 2013 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2013-02-27:/2013/02/27/A-introduction-to-compression/</guid><category>其他</category><category>理论</category><category>翻译</category></item><item><title>JavaScript：继承和原型链（译）</title><link>http://youngsterxyf.github.io/2013/02/27/Inheritance-and-the-prototype-chain/</link><description>&lt;p&gt;原文：&lt;a href="https://developer.mozilla.org/en-US/docs/JavaScript/Guide/Inheritance_and_the_prototype_chain"&gt;Inheritance and the prototype chain&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;译者：&lt;a href="https://github.com/youngsterxyf"&gt;youngsterxyf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;对于具备基于类的编程语言（如Java或C++）经验的程序员来说，JavaScript有点混乱，因为它是一种动态语言，并且不提供&lt;code&gt;class&lt;/code&gt;的 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Wed, 27 Feb 2013 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2013-02-27:/2013/02/27/Inheritance-and-the-prototype-chain/</guid><category>其他</category><category>JavaScript</category><category>翻译</category></item><item><title>Python格式字符串（译）</title><link>http://youngsterxyf.github.io/2013/01/26/python-string-format/</link><description>&lt;p&gt;原文：&lt;a href="http://mkaz.com/solog/python-string-format"&gt;Python String Format&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;译者：&lt;a href="https://github.com/youngsterxyf"&gt;youngsterxyf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;每次使用Python的格式字符串（string formatter），2.7及以上版本的，我都会犯错，并且有生之年，我想我都理解不了它们的文档。我非常习惯于更老的 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Sat, 26 Jan 2013 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2013-01-26:/2013/01/26/python-string-format/</guid><category>其他</category><category>Python</category><category>翻译</category></item><item><title>python周刊-第70期（译）</title><link>http://youngsterxyf.github.io/2013/01/25/issue-70-of-python-weekly/</link><description>&lt;p&gt;原文：&lt;a href="http://us2.campaign-archive1.com/?u=e2e180baf855ac797ef407fc7&amp;amp;id=7fc9a4c2e2&amp;amp;e=59f9a3c7e0"&gt;issue 70 of Python Weekly&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;译者：&lt;a href="https://github.com/youngsterxyf"&gt;youngsterxyf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;文章，教程和讲座(Articles, Tutorials and Talks)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://jakevdp.github.com/blog/2013/01/13/hacking-super-mario-bros-with-python/"&gt;使用Python Hacking超级马里奥(Hacking Super Mario Bros. With Python)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This post shows how you can use matplotlib's animation tool to create animated
gifs based on Super Mario Bros …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Fri, 25 Jan 2013 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2013-01-25:/2013/01/25/issue-70-of-python-weekly/</guid><category>其他</category><category>python</category><category>python-weekly</category><category>翻译</category></item><item><title>回顾12，展望13（技术篇）</title><link>http://youngsterxyf.github.io/2013/01/22/technology-12-13/</link><description>&lt;p&gt;终归是个搞技术的，所以怎么也得搞个总结与展望的特别篇，讲述过去一年的技术学习与成果，规划接下来一年技术学习 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Tue, 22 Jan 2013 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2013-01-22:/2013/01/22/technology-12-13/</guid><category>其他</category><category>总结</category><category>技术</category></item><item><title>回顾2012，展望2013</title><link>http://youngsterxyf.github.io/2013/01/18/review12-lookinto13/</link><description>&lt;p&gt;过去的一年里发生了很多事情，很大一部分原来就已在&lt;a href="http://youngsterxyf.github.io/2012/01/01/2011-summary/"&gt;2011年终-回顾与展望&lt;/a&gt;一文中提及---实习、找工作、毕业，除此之外还有：我和女朋友定亲了 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Fri, 18 Jan 2013 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2013-01-18:/2013/01/18/review12-lookinto13/</guid><category>其他</category><category>总结</category><category>文字</category></item><item><title>可扩展的Web架构与分布式系统（译）</title><link>http://youngsterxyf.github.io/2013/01/16/scalable-web-architecture-and-distributed-systems/</link><description>&lt;p&gt;原文：&lt;a href="http://www.aosabook.org/en/distsys.html"&gt;Scalable Web Architecture and Distributed Systems&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;译者：&lt;a href="https://github.com/youngsterxyf"&gt;youngsterxyf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;开源软件已成为一些最大型网站的基础组件。并且随着那些网站的发展，围绕它们的架构出现 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Wed, 16 Jan 2013 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2013-01-16:/2013/01/16/scalable-web-architecture-and-distributed-systems/</guid><category>其他</category><category>分布式系统</category><category>翻译</category></item><item><title>精心挑选的数据可视化工具推荐列表（译）</title><link>http://youngsterxyf.github.io/2013/01/15/a-carefully-selected-list-of-recommended-tools/</link><description>&lt;p&gt;原文： &lt;a href="http://datavisualization.ch/tools/selected-tools/"&gt;A Carefully Selected List of Recommended Tools&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;译者：&lt;a href="https://github.com/youngsterxyf"&gt;youngsterxyf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;当我和很多人谈论我们的工作时，经常被问到我们使用什么技术实现交互式和动态的数据 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Tue, 15 Jan 2013 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2013-01-15:/2013/01/15/a-carefully-selected-list-of-recommended-tools/</guid><category>其他</category><category>数据可视化</category><category>翻译</category></item><item><title>github pages构建失败问题解决</title><link>http://youngsterxyf.github.io/2013/01/08/fix-github-pages-builds-failed/</link><description>&lt;p&gt;今天为本博客提交更新后，github
pages自动构建始终不成功。原以为是新提交中引入了错误，于是按照&lt;a href="/2013/01/08/git-cancel-commits/"&gt;Git操作：强制删除提交到远程版本库的数据与版本记 …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Tue, 08 Jan 2013 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2013-01-08:/2013/01/08/fix-github-pages-builds-failed/</guid><category>其他</category><category>github</category><category>jekyll</category></item><item><title>Git操作：强制删除提交到远程版本库的数据与版本记录</title><link>http://youngsterxyf.github.io/2013/01/08/git-cancel-commits/</link><description>&lt;p&gt;今天因为某些尚不明了的问题导致，博客的Git pages始终构建失败，于是想在远程版本库中删除前几次提交。在&lt;a href="http://www.douban.com/note/189603387/"&gt;该网页&lt;/a&gt;上找到了解决方案：&lt;/p&gt;
&lt;div class="highlight" style="background: #ffffff"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git …&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Tue, 08 Jan 2013 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2013-01-08:/2013/01/08/git-cancel-commits/</guid><category>其他</category><category>Git</category><category>版本控制</category></item><item><title>装饰器与函数式Python（译）</title><link>http://youngsterxyf.github.io/2013/01/04/Decorators-and-Functional-Python/</link><description>&lt;p&gt;原文：&lt;a href="http://www.brianholdefehr.com/decorators-and-functional-python"&gt;Decorators and Functional Python&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;译者：&lt;a href="https://github.com/youngsterxyf"&gt;youngsterxyf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;装饰器是Python的一大特色。除了在语言中的原本用处，还帮助我们以一种有趣的方式（函数式）进行思考。&lt;/p&gt;
&lt;p&gt;我打算自底 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Fri, 04 Jan 2013 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2013-01-04:/2013/01/04/Decorators-and-Functional-Python/</guid><category>其他</category><category>Python</category><category>翻译</category></item><item><title>Python：字典剧本（译）</title><link>http://youngsterxyf.github.io/2013/01/04/Python-The-Dictionary-Playbook-cn/</link><description>&lt;p&gt;原文： &lt;a href="http://blog.amir.rachum.com/post/39501813266/python-the-dictionary-playbook"&gt;Python: The Dictionary Playbook&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;译者： &lt;a href="https://github.com/youngsterxyf"&gt;youngsterxyf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;我经常碰到关于Python中字典的各种样板代码，因此我决定在此展示一些，并分享完成相同操作的更加简洁的方式。&lt;/p&gt;
&lt;p&gt;上演： &lt;strong&gt;字典剧 …&lt;/strong&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Fri, 04 Jan 2013 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2013-01-04:/2013/01/04/Python-The-Dictionary-Playbook-cn/</guid><category>其他</category><category>Python</category><category>翻译</category></item><item><title>一行Python代码定义树（译）</title><link>http://youngsterxyf.github.io/2013/01/04/one-line-tree-in-Python/</link><description>&lt;p&gt;原文：&lt;a href="https://gist.github.com/2012250"&gt;One-line Tree in Python&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;译者：&lt;a href="https://github.com/youngsterxyf"&gt;youngsterxyf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;使用Python内置的&lt;a href="http://docs.python.org/2/library/collections.html#collections.defaultdict"&gt;defaultdict&lt;/a&gt;可以轻松定义一棵树：&lt;/p&gt;
&lt;div class="highlight" style="background: #ffffff"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #0000ff"&gt;def&lt;/span&gt; tree(): &lt;span style="color: #0000ff"&gt;return&lt;/span&gt; defaultdict(tree)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;就这样！&lt;/p&gt;
&lt;p&gt;这段代码简单地说明一棵树是一个字典，其缺省 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Fri, 04 Jan 2013 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2013-01-04:/2013/01/04/one-line-tree-in-Python/</guid><category>其他</category><category>Python</category><category>翻译</category></item><item><title>几个组合命令</title><link>http://youngsterxyf.github.io/2012/12/12/several-command-line/</link><description>&lt;p&gt;1.
Debian系Linux下查找某个软件包(以indent为例)：&lt;/p&gt;
&lt;div class="highlight" style="background: #ffffff"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;apt-cache search indent | awk &lt;span style="color: #a31515"&gt;&amp;#39;{if($1~/^indent$/) print $0}&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;APT包管理工具也提供了类似功能的命令选项：&lt;/p&gt;
&lt;div class="highlight" style="background: #ffffff"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;apt-cache pkgnames &lt;span style="color: #a31515"&gt;&amp;#39;indent&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;只不过这个输出仅有包名没有简介信息。&lt;/p&gt;
&lt;p&gt;2.
对当前目录下的所有C源码文件使用indent进行格式化：&lt;/p&gt;
&lt;div class="highlight" style="background: #ffffff"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ls | grep &lt;span style="color: #a31515"&gt;&amp;#39;\.c$&amp;#39;&lt;/span&gt; | xargs indent …&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Wed, 12 Dec 2012 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2012-12-12:/2012/12/12/several-command-line/</guid><category>其他</category><category>Linux</category><category>命令行</category></item><item><title>高性能MySQL - 1.MySQL架构</title><link>http://youngsterxyf.github.io/2012/12/11/high-performance-MySQL-1/</link><description>&lt;h2&gt;MySQL逻辑架构&lt;/h2&gt;
&lt;p&gt;&lt;img alt="mysql-arch" src="https://raw.githubusercontent.com/youngsterxyf/youngsterxyf.github.com/master/assets/uploads/pics/mysql-arch.jpg"&gt;&lt;/p&gt;
&lt;p&gt;1.
每个客户连接在服务器进程中都拥有自己的线程，每个连接所属的查询都会在指定的某个单独线程中完成，这些线 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Tue, 11 Dec 2012 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2012-12-11:/2012/12/11/high-performance-MySQL-1/</guid><category>其他</category><category>数据库</category><category>MySQL</category></item><item><title>日志信息命令行实时输出</title><link>http://youngsterxyf.github.io/2012/12/10/tail-and-xtail/</link><description>&lt;p&gt;Web开发中很多时候需要边看web服务器的日志输出边调试代码。一般的做法使用tail命令输出日志文件的末尾几行日志信息。&lt;/p&gt;
&lt;div class="highlight" style="background: #ffffff"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;tail -10 /var/log/nginx/access.log  &lt;span style="color: #008000"&gt;# 输出末尾10行&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;但这样的输出是静态的。在这个命令执行之后，日志文件里新增的日志 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Mon, 10 Dec 2012 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2012-12-10:/2012/12/10/tail-and-xtail/</guid><category>其他</category><category>linux</category><category>命令</category><category>调试</category></item><item><title>VMware面试题目总结</title><link>http://youngsterxyf.github.io/2012/12/06/VMware-interview/</link><description>&lt;p&gt;&lt;strong&gt;一面&lt;/strong&gt;中主要有三道题：&lt;/p&gt;
&lt;p&gt;1.
实现strcpy。函数原型：char&lt;em&gt; strcpy(char&lt;/em&gt; dest, const char* src)。&lt;/p&gt;
&lt;p&gt;后来发现自己实现的有问题。正确的实现应该如下：&lt;/p&gt;
&lt;div class="highlight" style="background: #ffffff"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #2b91af"&gt;char&lt;/span&gt;* strcpy(&lt;span style="color: #2b91af"&gt;char&lt;/span&gt;* dest, &lt;span style="color: #0000ff"&gt;const …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Thu, 06 Dec 2012 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2012-12-06:/2012/12/06/VMware-interview/</guid><category>其他</category><category>VMware</category><category>面试</category></item><item><title>博大精深的ps命令</title><link>http://youngsterxyf.github.io/2012/12/06/profound-ps/</link><description>&lt;p&gt;Linux命令行里如何获取所有的进程号(pid)？&lt;/p&gt;
&lt;p&gt;1.
第一种方法是通过ps -e或者ps aux获得所有进程的信息，然后通过管道传给grep或者awk进行数据过滤，比如&lt;/p&gt;
&lt;div class="highlight" style="background: #ffffff"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ps -e | awk &lt;span style="color: #a31515"&gt;&amp;#39;{print $1}&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;2.
其实通过ps自身的选项就可以实现： &lt;/p&gt;
&lt;div class="highlight" style="background: #ffffff"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ps -eo pid
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;而且输出还是排好序的。&lt;/p&gt;
&lt;p&gt;但 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Thu, 06 Dec 2012 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2012-12-06:/2012/12/06/profound-ps/</guid><category>其他</category><category>Linux</category><category>命令行</category><category>工具</category></item><item><title>2012校招-sonicWALL的两道编程笔试题</title><link>http://youngsterxyf.github.io/2012/12/05/sonicWALL-exam/</link><description>&lt;h2&gt;求二叉树中两个结点的最近公共祖先&lt;/h2&gt;
&lt;p&gt;比如：对于树&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="highlight" style="background: #ffffff"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;         A
       /
      B
    /   \
   C     D
 /   \
E     F
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/blockquote&gt;
&lt;p&gt;结点D，F的最近公共祖先为B&lt;/p&gt;
&lt;p&gt;实现：&lt;a href="https://github.com/youngsterxyf/Data-Structures-and-Algorithms/blob/master/nearest_common_ancestor.c"&gt;见源码&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;求二进制整数部分bits求反后的值&lt;/h2&gt;
&lt;p&gt;比如：对于整 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Wed, 05 Dec 2012 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2012-12-05:/2012/12/05/sonicWALL-exam/</guid><category>其他</category><category>笔试</category><category>算法</category></item><item><title>CentOS + rsync + inotify-tools实时备份配置</title><link>http://youngsterxyf.github.io/2012/11/29/centos+rsync+inotify-tools-realtime-backup/</link><description>&lt;p&gt;现实中，服务器可能会因为各种原因而crash掉，从而造成数据丢失或者服务的暂时不可用。为了提高服务的可用性以及数据的 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Thu, 29 Nov 2012 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2012-11-29:/2012/11/29/centos+rsync+inotify-tools-realtime-backup/</guid><category>其他</category><category>服务器</category><category>工具</category><category>Linux</category></item><item><title>GoAccess用户手册（译）</title><link>http://youngsterxyf.github.io/2012/11/29/goaccess-man-page-cn/</link><description>&lt;p&gt;原文：&lt;a href="http://goaccess.prosoftcorp.com/man"&gt;http://goaccess.prosoftcorp.com/man&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;翻译：youngsterxyf&lt;/p&gt;
&lt;h2&gt;名称&lt;/h2&gt;
&lt;p&gt;goaccess - 快速的web日志分析器与交互式查看器&lt;/p&gt;
&lt;h2&gt;概要&lt;/h2&gt;
&lt;p&gt;goaccess  [-f 输入文件]  [-c]  [-e]  [-a]&lt;/p&gt;
&lt;h2&gt;描述&lt;/h2&gt;
&lt;p&gt;goaccess是一个实时的web日志分析器，以及交互式查看器，在类Unix系统的终端(terminal)上运行，是一个基 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Thu, 29 Nov 2012 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2012-11-29:/2012/11/29/goaccess-man-page-cn/</guid><category>其他</category><category>翻译</category><category>工具</category></item><item><title>pi的一种并行算法</title><link>http://youngsterxyf.github.io/2012/11/22/pi-parallel-algorithm/</link><description>&lt;p&gt;我们都知道圆周率pi的值是3.141592653...，那么这个值是怎么算出来的呢？一种方式是通过某种方式算出圆的面积或者周长，然后根据公式 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Thu, 22 Nov 2012 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2012-11-22:/2012/11/22/pi-parallel-algorithm/</guid><category>其他</category><category>算法</category><category>并行</category><category>Python</category></item><item><title>诗歌选</title><link>http://youngsterxyf.github.io/2012/11/20/poems/</link><description>&lt;h3&gt;南乡子&lt;/h3&gt;
&lt;h4&gt;和杨元素，时移守密州&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;苏轼&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;东武望余杭，云海天涯两杳茫。何日功成名遂了，还乡，醉笑陪公三万场。&lt;/p&gt;
&lt;p&gt;不用诉离觞，痛饮从 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Tue, 20 Nov 2012 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2012-11-20:/2012/11/20/poems/</guid><category>其他</category><category>阅读</category><category>诗歌</category></item><item><title>面试准备</title><link>http://youngsterxyf.github.io/2012/11/20/prepareForInterview/</link><description>&lt;h3&gt;自我介绍&lt;/h3&gt;
&lt;p&gt;我叫夏永锋，目前是一名上海交大的硕士研究生，将于2013年3月毕业。现在作为一名web开发实习生在Google CSR部门实习。实习的工作内容主要包括：开发维护 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Tue, 20 Nov 2012 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2012-11-20:/2012/11/20/prepareForInterview/</guid><category>其他</category><category>面试</category><category>英语</category></item><item><title>笔试题目</title><link>http://youngsterxyf.github.io/2012/11/20/work-exam/</link><description>&lt;h3&gt;2013-网易-校园招聘-C++开发工程师&lt;/h3&gt;
&lt;h4&gt;Fibonacci number&lt;/h4&gt;
&lt;p&gt;F(n)的值是多少？&lt;/p&gt;
&lt;p&gt;&lt;img alt="Fabonacci" src="https://raw.githubusercontent.com/youngsterxyf/youngsterxyf.github.com/master/assets/uploads/pics/NumberedEquation6.gif"&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;常规算法&lt;/strong&gt;：根据Fabonacci的定义，递归求值。时间复杂度$ O(2^n) $&lt;/p&gt;
&lt;div class="highlight" style="background: #ffffff"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #0000ff"&gt;def&lt;/span&gt; fibobacci(n):
    &lt;span style="color: #0000ff"&gt;return&lt;/span&gt; n&amp;gt;=2 &lt;span style="color: #0000ff"&gt;and&lt;/span&gt; fibonacci(n-2) + fibonacci(n-1) &lt;span style="color: #0000ff"&gt;or&lt;/span&gt; n
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;迭代&lt;/strong&gt;：利 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Tue, 20 Nov 2012 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2012-11-20:/2012/11/20/work-exam/</guid><category>其他</category><category>笔试</category></item><item><title>Python装饰器入门（译）</title><link>http://youngsterxyf.github.io/2012/07/30/a-primer-on-python-decorators/</link><description>&lt;p&gt;原文: &lt;a href="http://www.thumbtack.com/engineering/a-primer-on-python-decorators/"&gt;A primer on Python decorators&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;翻译: &lt;a href="http://xiayf.blogspot.com/"&gt;youngsterxyf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python允许你，作为程序员，使用函数完成一些很酷的事情。在Python中，函数是&lt;a href="http://en.wikipedia.org/wiki/First-class_function"&gt;一等对象(first-class object)&lt;/a&gt;，这就意味着你可以像使 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Mon, 30 Jul 2012 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2012-07-30:/2012/07/30/a-primer-on-python-decorators/</guid><category>其他</category><category>Python</category><category>翻译</category></item><item><title>Python FAQ：Web开发（译）</title><link>http://youngsterxyf.github.io/2012/07/30/python-faq-webdev/</link><description>&lt;p&gt;原文： &lt;a href="http://me.veekun.com/blog/2012/05/05/python-faq-webdev/"&gt;Python FAQ: Webdev&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;译者： &lt;a href="http://github.com/youngsterxyf/"&gt;youngsterxyf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://me.veekun.com/blog/2011/07/22/python-faq/"&gt;Python FAQ&lt;/a&gt;的一部分&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;我只会PHP，那该怎么用Python来编写一个Web应用呢？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这是一个相当复杂的问题，甚至很容易就能写一本书来探讨Web开发与Python …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Mon, 30 Jul 2012 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2012-07-30:/2012/07/30/python-faq-webdev/</guid><category>其他</category><category>Python</category><category>翻译</category></item><item><title>关于技术的学习方法</title><link>http://youngsterxyf.github.io/2012/05/11/about-method-of-learning-technology/</link><description>&lt;p&gt;关于学习，时间短与效果好始终是一对矛盾的统一体。&lt;/p&gt;
&lt;p&gt;很多时候，要想在最短的时间内完成一件事情，最好的方法就是依葫 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Fri, 11 May 2012 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2012-05-11:/2012/05/11/about-method-of-learning-technology/</guid><category>其他</category><category>技术</category><category>学习方法</category></item><item><title>ubuntu12.04+ngnix+php-fastcgi+mysql+memcached网站开发测试环境搭建</title><link>http://youngsterxyf.github.io/2012/05/10/ubuntu12.04-nginx-php-factcgi-mysql-memcached/</link><description>&lt;p&gt;1.
安装必要的软件&lt;/p&gt;
&lt;div class="highlight" style="background: #ffffff"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo apt-get install nginx php5-cli php5-cgi spawn-fcgi psmisc mysql-server &lt;span style="color: #a31515"&gt;\&lt;/span&gt;
mysql-client php5-mysql memcached php5-memcache php5-curl php5-gd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;2.
打开浏览器访问: 127.0.0.1。就能看到表示nginx安装成功的页面。但这时访问php文件页面还不行。
（注：ngnix的配置文件目录为 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Thu, 10 May 2012 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2012-05-10:/2012/05/10/ubuntu12.04-nginx-php-factcgi-mysql-memcached/</guid><category>其他</category><category>Linux</category><category>Nginx</category><category>PHP</category></item><item><title>Python对象创建过程（译）</title><link>http://youngsterxyf.github.io/2012/04/26/python-object-creation-sequence/</link><description>&lt;p&gt;原文： &lt;a href="http://eli.thegreenplace.net/2012/04/16/python-object-creation-sequence/"&gt;Python object creation sequence&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;译者： &lt;a href="http://xiayf.blogspot.com/"&gt;youngsterxyf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[本文讨论的Python版本为3.x]&lt;/p&gt;
&lt;p&gt;本文旨在探究Python中新对象的创建过程。正如我在&lt;a href="&amp;lt;http://eli.thegreenplace.net/2012/03/23/python-internals-how-callables-work/"&gt;前一篇文章&lt;/a&gt;中所解释的，对象的创建只是调用可调用对 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Thu, 26 Apr 2012 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2012-04-26:/2012/04/26/python-object-creation-sequence/</guid><category>其他</category><category>Python</category><category>翻译</category></item><item><title>关于指针的一道笔试题</title><link>http://youngsterxyf.github.io/2012/04/20/an-exercise-about-pointer/</link><description>&lt;p&gt;同学找实习，遇到这样一道笔试题:&lt;/p&gt;
&lt;div class="highlight" style="background: #ffffff"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #2b91af"&gt;int&lt;/span&gt; *a[2][3];
&lt;span style="color: #0000ff"&gt;sizeof&lt;/span&gt;(a) = ?
&lt;span style="color: #0000ff"&gt;sizeof&lt;/span&gt;(*a) = ?
&lt;span style="color: #0000ff"&gt;sizeof&lt;/span&gt;(**a) = ?
&lt;span style="color: #0000ff"&gt;sizeof&lt;/span&gt;(***a) = ?
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;这题还是有点小意思的。遇到这种题，脑子一定要清楚，注意 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Fri, 20 Apr 2012 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2012-04-20:/2012/04/20/an-exercise-about-pointer/</guid><category>其他</category><category>笔试</category><category>C/C++</category></item><item><title>学习的"道"与"术"</title><link>http://youngsterxyf.github.io/2012/03/31/dao-and-shu-about-learning/</link><description>&lt;p&gt;读研以来，一直觉得自己的学习方法不够高效。试图将要学习的东西进行分类，然后以不同的方法学习之。那么该如何分类 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Sat, 31 Mar 2012 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2012-03-31:/2012/03/31/dao-and-shu-about-learning/</guid><category>其他</category><category>学习方法</category></item><item><title>Python学习路线(针对具备一定编程经验者)</title><link>http://youngsterxyf.github.io/2012/02/21/the-path-of-learning-python/</link><description>&lt;p&gt;相比C,C++,JAVA等编程语言，Python是易学的。但要想深入地理解Python，并熟练地编写Python风格的Python代码。我想还是有一长段路程要走的。下面即是我的一点经验总结，主要是 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Tue, 21 Feb 2012 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2012-02-21:/2012/02/21/the-path-of-learning-python/</guid><category>其他</category><category>Python</category></item><item><title>Linux命令习题</title><link>http://youngsterxyf.github.io/2012/02/15/Linux-Command-Excercise/</link><description>&lt;p&gt;For each of the outputs listed below, find one sequence of commands connected by pipes that produces the output. For each problem, turn in the command sequence that you used to generate the requested output. (Do NOT turn in the output itself.)&lt;/p&gt;
&lt;p&gt;1.
A listing of all processes that you …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Wed, 15 Feb 2012 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2012-02-15:/2012/02/15/Linux-Command-Excercise/</guid><category>其他</category><category>Linux</category></item><item><title>2011年终-回顾与展望</title><link>http://youngsterxyf.github.io/2012/01/01/2011-summary/</link><description>&lt;p&gt;昨晚实验室聚餐，和师兄们喝醉了，明年的这个时候，我也就和他们一样将要毕业。时间，总是往前看觉得很漫长，可回过头去 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Sun, 01 Jan 2012 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2012-01-01:/2012/01/01/2011-summary/</guid><category>其他</category><category>总结</category></item><item><title>《Classic Shell Scripting》：ls, locate, type, find, df, du, diff, patch</title><link>http://youngsterxyf.github.io/2011/12/23/classic-shell-scripting-ls-locate-and-so-on/</link><description>&lt;h4&gt;一.ls&lt;/h4&gt;
&lt;p&gt;语法&lt;/p&gt;
&lt;div class="highlight" style="background: #ffffff"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ls [ options ] [ file(s) ]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;用途&lt;/p&gt;
&lt;div class="highlight" style="background: #ffffff"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;列出文件目录的内容
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;主要选项&lt;/p&gt;
&lt;div class="highlight" style="background: #ffffff"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;-1 : 数字1.强制为单栏输出。在交互式模式下，ls一般会以适于当前窗口的最小宽度，使用多个列
-a : 显示 …&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Fri, 23 Dec 2011 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2011-12-23:/2011/12/23/classic-shell-scripting-ls-locate-and-so-on/</guid><category>其他</category><category>Linux</category><category>Shell</category></item><item><title>ArchLinux上安装Consolas字体</title><link>http://youngsterxyf.github.io/2011/12/23/install-Consolas-font-on-ArchLinux/</link><description>&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;从&lt;a href="http://www.iplaysoft.com/consolas.html"&gt;http://www.iplaysoft.com/consolas.html&lt;/a&gt;下载Consolas字体。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;然后&lt;/p&gt;
&lt;div class="highlight" style="background: #ffffff"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo mkdir -p /usr/share/fonts/yahei
sudo cp YaHei.Consolas.1.11b.ttf /usr/share/fonts/yahei/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;改变权限：&lt;/p&gt;
&lt;div class="highlight" style="background: #ffffff"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo chmod 644 /usr/share/fonts/yahei/YaHei.Consolas.1.11b.ttf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安装：&lt;/p&gt;
&lt;div class="highlight" style="background: #ffffff"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;cd /usr …&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Fri, 23 Dec 2011 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2011-12-23:/2011/12/23/install-Consolas-font-on-ArchLinux/</guid><category>其他</category><category>Linux</category><category>字体</category></item><item><title>《Classic Shell Scripting》：文件描述符处理</title><link>http://youngsterxyf.github.io/2011/12/22/classic-shell-scripting-file-descriptors/</link><description>&lt;p&gt;在系统内部，UNIX是以一个小的整数数字，称为文件描述符(file descriptors)，表示每个进程打开的文件。数字由零开始，至多到系统定义的打开文件数目的限制。传 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Thu, 22 Dec 2011 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2011-12-22:/2011/12/22/classic-shell-scripting-file-descriptors/</guid><category>其他</category><category>Linux</category><category>Shell</category></item><item><title>《Classic Shell Scripting》：sed and cut</title><link>http://youngsterxyf.github.io/2011/12/22/classic-shell-scripting-sed-and-cut/</link><description>&lt;h4&gt;一. sed&lt;/h4&gt;
&lt;p&gt;一般来说，执行文本替换的正确程序应该是sed --- 流编辑器(Stream Editor)。sed的设计就是用来以批处理的方式而不是交互的方式来编辑文件。当你知道要做好几个变更 --- 不管是对一个还是数个文 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Thu, 22 Dec 2011 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2011-12-22:/2011/12/22/classic-shell-scripting-sed-and-cut/</guid><category>其他</category><category>Linux</category><category>Shell</category></item><item><title>《Classic Shell Scripting》：sort, uniq, wc, head, tail</title><link>http://youngsterxyf.github.io/2011/12/22/classic-shell-scripting-sort-uniq-wc-head-tail/</link><description>&lt;h4&gt;一.sort&lt;/h4&gt;
&lt;p&gt;就像awk,cut与join一样，sort将输入看作具有多条记录的数据流，而记录是由可变宽度的字段组成，记录是以换行符作为定界符，字段的定界符则是空白字符或是用户指 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Thu, 22 Dec 2011 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2011-12-22:/2011/12/22/classic-shell-scripting-sort-uniq-wc-head-tail/</guid><category>其他</category><category>Linux</category><category>Shell</category></item><item><title>《Classic Shell Scripting》第一、二章阅读笔记</title><link>http://youngsterxyf.github.io/2011/12/09/classic-shell-scripting-1-2/</link><description>&lt;h4&gt;第一章：背景知识&lt;/h4&gt;
&lt;p&gt;软件工具的原则&lt;/p&gt;
&lt;div class="highlight" style="background: #ffffff"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;一次做好一件事

处理文本行，不要处理二进制数据

使用正则表达式：正则表达式(regular expression)是 …&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Fri, 09 Dec 2011 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2011-12-09:/2011/12/09/classic-shell-scripting-1-2/</guid><category>其他</category><category>Linux</category><category>Shell</category></item><item><title>Linux添加定时任务</title><link>http://youngsterxyf.github.io/2011/12/07/cron-usage/</link><description>&lt;p&gt;在Linux下如果希望某个任务定时地执行，一般是使用cron服务器，将任务添加到cron任务列表中。&lt;/p&gt;
&lt;h4&gt;启动，关闭，重启cron(需超级用户权限)&lt;/h4&gt;
&lt;div class="highlight" style="background: #ffffff"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;/etc/init.d/cron start
/etc/init.d/cron stop
/etc/init.d/cron restart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;注:archlinux下为/etc/rc.d/crond …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Wed, 07 Dec 2011 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2011-12-07:/2011/12/07/cron-usage/</guid><category>其他</category><category>Linux</category></item><item><title>Linux添加sudo用户权限</title><link>http://youngsterxyf.github.io/2011/12/07/linux-add-sudo-user/</link><description>&lt;p&gt;Linux中很多命令需要使用超级用户权限，在这些命令前添加sudo然后直接执行是很方便的。&lt;/p&gt;
&lt;p&gt;那么就先要将自己的用户名添加到sudoers中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用su命令切换到超级用户(在提示后输入root的密码)&lt;/li&gt;
&lt;li&gt;使用visudo命令(编辑/etc/sudoers文件)，也可以直接使用 …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">youngsterxyf</dc:creator><pubDate>Wed, 07 Dec 2011 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:youngsterxyf.github.io,2011-12-07:/2011/12/07/linux-add-sudo-user/</guid><category>其他</category><category>Linux</category></item></channel></rss>