<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="436.8042px" preserveAspectRatio="none" style="width:800px;height:436px;background:#FFFFFF;" version="1.1" viewBox="0 0 800 436" width="800.3029px" zoomAndPan="magnify"><defs><filter height="300%" id="f406t3pr1nllv" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="1.21166224914805"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="2.4233244982961" dy="2.4233244982961" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[cf7212f148c2a2f46c357ea31d18a0ad]
class Cache--><rect codeLine="4" fill="#FEFECE" filter="url(#f406t3pr1nllv)" height="83.6047" id="Cache" style="stroke:#A80036;stroke-width:0.9087466868610374;" width="255.0549" x="4.2408" y="9.6933"/><ellipse cx="115.8652" cy="19.3866" fill="#B4A7E5" rx="6.6641" ry="6.6641" style="stroke:#A80036;stroke-width:0.605831124574025;"/><path d="M113.9022,17.2476 L113.9022,16.0939 L117.8469,16.0939 L117.8469,17.2476 L116.529,17.2476 L116.529,21.565 L117.8469,21.565 L117.8469,22.7187 L113.9022,22.7187 L113.9022,21.565 L115.22,21.565 L115.22,17.2476 Z " fill="#000000"/><text fill="#000000" font-family="Albert Sans" font-size="9.0875" font-style="italic" lengthAdjust="spacing" textLength="26.6566" x="128.2847" y="22.5672">Cache</text><line style="stroke:#A80036;stroke-width:0.9087466868610374;" x1="4.8466" x2="258.6899" y1="29.0799" y2="29.0799"/><line style="stroke:#A80036;stroke-width:0.9087466868610374;" x1="4.8466" x2="258.6899" y1="33.9265" y2="33.9265"/><ellipse cx="10.905" cy="40.5907" fill="#84BE84" rx="1.8175" ry="1.8175" style="stroke:#038048;stroke-width:0.605831124574025;"/><text fill="#000000" font-family="Albert Sans" font-size="9.0875" lengthAdjust="spacing" textLength="239.3033" x="16.3574" y="44.983">virtual Handle* Insert(const Slice&amp; key, void* value, ...) = 0</text><ellipse cx="10.905" cy="51.4956" fill="#84BE84" rx="1.8175" ry="1.8175" style="stroke:#038048;stroke-width:0.605831124574025;"/><text fill="#000000" font-family="Albert Sans" font-size="9.0875" lengthAdjust="spacing" textLength="184.7785" x="16.3574" y="55.8879">virtual Handle* Lookup(const Slice&amp; key) = 0</text><ellipse cx="10.905" cy="62.4006" fill="#84BE84" rx="1.8175" ry="1.8175" style="stroke:#038048;stroke-width:0.605831124574025;"/><text fill="#000000" font-family="Albert Sans" font-size="9.0875" lengthAdjust="spacing" textLength="160.5452" x="16.3574" y="66.7929">virtual void* Value(Handle* handle) = 0</text><ellipse cx="10.905" cy="73.3056" fill="#84BE84" rx="1.8175" ry="1.8175" style="stroke:#038048;stroke-width:0.605831124574025;"/><text fill="#000000" font-family="Albert Sans" font-size="9.0875" lengthAdjust="spacing" textLength="164.7861" x="16.3574" y="77.6978">virtual void Release(Handle* handle) = 0</text><ellipse cx="10.905" cy="84.2105" fill="#84BE84" rx="1.8175" ry="1.8175" style="stroke:#038048;stroke-width:0.605831124574025;"/><text fill="#000000" font-family="Albert Sans" font-size="9.0875" lengthAdjust="spacing" textLength="161.7569" x="16.3574" y="88.6028">virtual void Erase(const Slice&amp; key) = 0</text><!--MD5=[7321d795a6de0b901ade2f2ab05a1695]
class ShardedLRUCache--><rect codeLine="12" fill="#FEFECE" filter="url(#f406t3pr1nllv)" height="116.3196" id="ShardedLRUCache" style="stroke:#A80036;stroke-width:0.9087466868610374;" width="193.2601" x="172.6619" y="152.6694"/><ellipse cx="227.944" cy="162.3627" fill="#ADD1B2" rx="6.6641" ry="6.6641" style="stroke:#A80036;stroke-width:0.605831124574025;"/><path d="M229.4085,165.504 Q229.0979,165.6638 228.7563,165.7436 Q228.4146,165.8235 228.0374,165.8235 Q226.6974,165.8235 225.9919,164.9405 Q225.2863,164.0575 225.2863,162.3891 Q225.2863,160.7162 225.9919,159.8332 Q226.6974,158.9502 228.0374,158.9502 Q228.4146,158.9502 228.7607,159.0301 Q229.1068,159.1099 229.4085,159.2697 L229.4085,160.7251 Q229.0713,160.4145 228.7541,160.2703 Q228.4368,160.1261 228.0996,160.1261 Q227.3807,160.1261 227.0147,160.6963 Q226.6486,161.2664 226.6486,162.3891 Q226.6486,163.5073 227.0147,164.0774 Q227.3807,164.6476 228.0996,164.6476 Q228.4368,164.6476 228.7541,164.5034 Q229.0713,164.3592 229.4085,164.0486 Z " fill="#000000"/><text fill="#000000" font-family="Albert Sans" font-size="9.0875" lengthAdjust="spacing" textLength="77.5464" x="240.3635" y="165.5434">ShardedLRUCache</text><line style="stroke:#A80036;stroke-width:0.9087466868610374;" x1="173.2677" x2="365.3162" y1="172.056" y2="172.056"/><rect fill="none" height="3.635" style="stroke:#C82930;stroke-width:0.605831124574025;" width="3.635" x="177.5085" y="176.9027"/><text fill="#000000" font-family="Albert Sans" font-size="9.0875" lengthAdjust="spacing" textLength="130.8595" x="184.7785" y="183.1125">LRUCache shard_[kNumShards]</text><rect fill="none" height="3.635" style="stroke:#C82930;stroke-width:0.605831124574025;" width="3.635" x="177.5085" y="187.8076"/><text fill="#000000" font-family="Albert Sans" font-size="9.0875" lengthAdjust="spacing" textLength="91.4805" x="184.7785" y="194.0174">port::Mutex id_mutex_</text><rect fill="none" height="3.635" style="stroke:#C82930;stroke-width:0.605831124574025;" width="3.635" x="177.5085" y="198.7126"/><text fill="#000000" font-family="Albert Sans" font-size="9.0875" lengthAdjust="spacing" textLength="68.4589" x="184.7785" y="204.9224">uint64_t last_id_</text><line style="stroke:#A80036;stroke-width:0.9087466868610374;" x1="173.2677" x2="365.3162" y1="209.6176" y2="209.6176"/><ellipse cx="179.326" cy="216.2817" fill="#84BE84" rx="1.8175" ry="1.8175" style="stroke:#038048;stroke-width:0.605831124574025;"/><text fill="#000000" font-family="Albert Sans" font-size="9.0875" lengthAdjust="spacing" textLength="177.5085" x="184.7785" y="220.674">explicit ShardedLRUCache(size_t capacity)</text><ellipse cx="179.326" cy="227.1867" fill="#84BE84" rx="1.8175" ry="1.8175" style="stroke:#038048;stroke-width:0.605831124574025;"/><text fill="#000000" font-family="Albert Sans" font-size="9.0875" lengthAdjust="spacing" textLength="177.5085" x="184.7785" y="231.5789">Handle* Lookup(const Slice&amp; key) override</text><ellipse cx="179.326" cy="238.0916" fill="#84BE84" rx="1.8175" ry="1.8175" style="stroke:#038048;stroke-width:0.605831124574025;"/><text fill="#000000" font-family="Albert Sans" font-size="9.0875" lengthAdjust="spacing" textLength="157.5161" x="184.7785" y="242.4839">void Release(Handle* handle) override</text><ellipse cx="179.326" cy="248.9966" fill="#84BE84" rx="1.8175" ry="1.8175" style="stroke:#038048;stroke-width:0.605831124574025;"/><text fill="#000000" font-family="Albert Sans" font-size="9.0875" lengthAdjust="spacing" textLength="154.4869" x="184.7785" y="253.3889">void Erase(const Slice&amp; key) override</text><ellipse cx="179.326" cy="259.9016" fill="#84BE84" rx="1.8175" ry="1.8175" style="stroke:#038048;stroke-width:0.605831124574025;"/><text fill="#000000" font-family="Albert Sans" font-size="9.0875" lengthAdjust="spacing" textLength="153.2753" x="184.7785" y="264.2938">void* Value(Handle* handle) override</text><!--MD5=[efb1cb8eb6bb5f9c30e83dbb1b0004cc]
class LRUCache--><rect codeLine="24" fill="#FEFECE" filter="url(#f406t3pr1nllv)" height="29.0799" id="LRUCache" style="stroke:#A80036;stroke-width:0.9087466868610374;" width="62.4006" x="280.4998" y="36.9557"/><ellipse cx="289.5873" cy="46.649" fill="#ADD1B2" rx="6.6641" ry="6.6641" style="stroke:#A80036;stroke-width:0.605831124574025;"/><path d="M291.0519,49.7903 Q290.7413,49.95 290.3996,50.0299 Q290.0579,50.1097 289.6808,50.1097 Q288.3407,50.1097 287.6352,49.2267 Q286.9297,48.3437 286.9297,46.6753 Q286.9297,45.0025 287.6352,44.1195 Q288.3407,43.2365 289.6808,43.2365 Q290.0579,43.2365 290.404,43.3163 Q290.7501,43.3962 291.0519,43.5559 L291.0519,45.0114 Q290.7146,44.7008 290.3974,44.5565 Q290.0801,44.4123 289.7429,44.4123 Q289.024,44.4123 288.658,44.9825 Q288.2919,45.5527 288.2919,46.6753 Q288.2919,47.7935 288.658,48.3637 Q289.024,48.9339 289.7429,48.9339 Q290.0801,48.9339 290.3974,48.7897 Q290.7146,48.6455 291.0519,48.3349 Z " fill="#000000"/><text fill="#000000" font-family="Albert Sans" font-size="9.0875" lengthAdjust="spacing" textLength="43.014" x="298.0689" y="49.8296">LRUCache</text><line style="stroke:#A80036;stroke-width:0.9087466868610374;" x1="281.1056" x2="342.2946" y1="56.3423" y2="56.3423"/><line style="stroke:#A80036;stroke-width:0.9087466868610374;" x1="281.1056" x2="342.2946" y1="61.1889" y2="61.1889"/><!--MD5=[3c98844a38bbe7a583aaec7e1d054465]
class TableCache--><rect codeLine="26" fill="#FEFECE" filter="url(#f406t3pr1nllv)" height="105.4146" id="TableCache" style="stroke:#A80036;stroke-width:0.9087466868610374;" width="494.964" x="21.8099" y="322.908"/><ellipse cx="242.181" cy="332.6013" fill="#ADD1B2" rx="6.6641" ry="6.6641" style="stroke:#A80036;stroke-width:0.605831124574025;"/><path d="M243.6456,335.7426 Q243.335,335.9023 242.9933,335.9822 Q242.6516,336.062 242.2745,336.062 Q240.9344,336.062 240.2289,335.179 Q239.5234,334.296 239.5234,332.6276 Q239.5234,330.9548 240.2289,330.0718 Q240.9344,329.1888 242.2745,329.1888 Q242.6516,329.1888 242.9977,329.2686 Q243.3438,329.3485 243.6456,329.5082 L243.6456,330.9637 Q243.3083,330.653 242.9911,330.5088 Q242.6738,330.3646 242.3366,330.3646 Q241.6178,330.3646 241.2517,330.9348 Q240.8856,331.505 240.8856,332.6276 Q240.8856,333.7458 241.2517,334.316 Q241.6178,334.8862 242.3366,334.8862 Q242.6738,334.8862 242.9911,334.742 Q243.3083,334.5977 243.6456,334.2871 Z " fill="#000000"/><text fill="#000000" font-family="Albert Sans" font-size="9.0875" lengthAdjust="spacing" textLength="49.0723" x="254.6005" y="335.7819">TableCache</text><line style="stroke:#A80036;stroke-width:0.9087466868610374;" x1="22.4158" x2="516.1681" y1="342.2946" y2="342.2946"/><rect fill="none" height="3.635" style="stroke:#C82930;stroke-width:0.605831124574025;" width="3.635" x="26.6566" y="347.1412"/><text fill="#000000" font-family="Albert Sans" font-size="9.0875" lengthAdjust="spacing" textLength="63.0064" x="33.9265" y="353.351">Cache* cache_</text><line style="stroke:#A80036;stroke-width:0.9087466868610374;" x1="22.4158" x2="516.1681" y1="358.0462" y2="358.0462"/><ellipse cx="28.4741" cy="364.7103" fill="#84BE84" rx="1.8175" ry="1.8175" style="stroke:#038048;stroke-width:0.605831124574025;"/><text fill="#000000" font-family="Albert Sans" font-size="9.0875" lengthAdjust="spacing" textLength="311.3972" x="33.9265" y="369.1026">TableCache(const std::string&amp; dbname, const Options&amp; options, int entries)</text><ellipse cx="28.4741" cy="375.6153" fill="#84BE84" rx="1.8175" ry="1.8175" style="stroke:#038048;stroke-width:0.605831124574025;"/><text fill="#000000" font-family="Albert Sans" font-size="9.0875" lengthAdjust="spacing" textLength="479.2124" x="33.9265" y="380.0076">Iterator* NewIterator(const ReadOptions&amp; options, uint64_t file_number, uint64_t file_size, Table** tableptr = nullptr)</text><ellipse cx="28.4741" cy="386.5203" fill="#84BE84" rx="1.8175" ry="1.8175" style="stroke:#038048;stroke-width:0.605831124574025;"/><text fill="#000000" font-family="Albert Sans" font-size="9.0875" lengthAdjust="spacing" textLength="407.7243" x="33.9265" y="390.9125">Status Get(const ReadOptions&amp; options, uint64_t file_number, uint64_t file_size, const Slice&amp; k, ...)</text><ellipse cx="28.4741" cy="397.4252" fill="#84BE84" rx="1.8175" ry="1.8175" style="stroke:#038048;stroke-width:0.605831124574025;"/><text fill="#000000" font-family="Albert Sans" font-size="9.0875" lengthAdjust="spacing" textLength="133.2828" x="33.9265" y="401.8175">void Evict(uint64_t file_number)</text><text fill="#000000" font-family="Albert Sans" font-size="9.0875" lengthAdjust="spacing" textLength="0" x="36.3499" y="412.7225"/><rect fill="#F24D5C" height="3.635" style="stroke:#C82930;stroke-width:0.605831124574025;" width="3.635" x="26.6566" y="417.4176"/><text fill="#000000" font-family="Albert Sans" font-size="9.0875" lengthAdjust="spacing" textLength="308.368" x="33.9265" y="423.6274">Status FindTable(uint64_t file_number, uint64_t file_size, Cache::Handle**)</text><!--MD5=[c0b936abb008b3271898d4186b5531e4]
class Table--><rect codeLine="36" fill="#FEFECE" filter="url(#f406t3pr1nllv)" height="127.2245" id="Table" style="stroke:#A80036;stroke-width:0.9087466868610374;" width="404.6952" x="387.429" y="147.217"/><ellipse cx="575.9939" cy="156.9103" fill="#ADD1B2" rx="6.6641" ry="6.6641" style="stroke:#A80036;stroke-width:0.605831124574025;"/><path d="M577.4585,160.0515 Q577.1479,160.2113 576.8063,160.2911 Q576.4646,160.371 576.0874,160.371 Q574.7474,160.371 574.0419,159.488 Q573.3363,158.605 573.3363,156.9366 Q573.3363,155.2637 574.0419,154.3807 Q574.7474,153.4977 576.0874,153.4977 Q576.4646,153.4977 576.8107,153.5776 Q577.1568,153.6575 577.4585,153.8172 L577.4585,155.2726 Q577.1213,154.962 576.804,154.8178 Q576.4868,154.6736 576.1495,154.6736 Q575.4307,154.6736 575.0646,155.2438 Q574.6986,155.814 574.6986,156.9366 Q574.6986,158.0548 575.0646,158.625 Q575.4307,159.1951 576.1495,159.1951 Q576.4868,159.1951 576.804,159.0509 Q577.1213,158.9067 577.4585,158.5961 Z " fill="#000000"/><text fill="#000000" font-family="Albert Sans" font-size="9.0875" lengthAdjust="spacing" textLength="22.4158" x="588.4135" y="160.0909">Table</text><line style="stroke:#A80036;stroke-width:0.9087466868610374;" x1="388.0348" x2="791.5184" y1="166.6036" y2="166.6036"/><rect fill="none" height="3.635" style="stroke:#C82930;stroke-width:0.605831124574025;" width="3.635" x="392.2757" y="171.4502"/><text fill="#000000" font-family="Albert Sans" font-size="9.0875" lengthAdjust="spacing" textLength="65.4298" x="399.5456" y="177.66">Rep* const rep_</text><line style="stroke:#A80036;stroke-width:0.9087466868610374;" x1="388.0348" x2="791.5184" y1="182.3552" y2="182.3552"/><ellipse cx="394.0931" cy="189.0193" fill="#84BE84" rx="1.8175" ry="1.8175" style="stroke:#038048;stroke-width:0.605831124574025;"/><text fill="#000000" font-family="Albert Sans" font-size="9.0875" lengthAdjust="spacing" text-decoration="underline" textLength="388.9436" x="399.5456" y="193.4116">Status Open(const Options&amp; options, RandomAccessFile* file, uint64_t file_size, Table** table)</text><ellipse cx="394.0931" cy="199.9243" fill="#84BE84" rx="1.8175" ry="1.8175" style="stroke:#038048;stroke-width:0.605831124574025;"/><text fill="#000000" font-family="Albert Sans" font-size="9.0875" lengthAdjust="spacing" textLength="201.1359" x="399.5456" y="204.3165">Iterator* NewIterator(const ReadOptions&amp;) const</text><text fill="#000000" font-family="Albert Sans" font-size="9.0875" lengthAdjust="spacing" textLength="0" x="401.969" y="215.2215"/><rect fill="#F24D5C" height="3.635" style="stroke:#C82930;stroke-width:0.605831124574025;" width="3.635" x="392.2757" y="219.9167"/><text fill="#000000" font-family="Albert Sans" font-size="9.0875" lengthAdjust="spacing" textLength="287.7698" x="399.5456" y="226.1265">static Iterator* BlockReader(void*, const ReadOptions&amp;, const Slice&amp;)</text><rect fill="#F24D5C" height="3.635" style="stroke:#C82930;stroke-width:0.605831124574025;" width="3.635" x="392.2757" y="230.8217"/><text fill="#000000" font-family="Albert Sans" font-size="9.0875" lengthAdjust="spacing" textLength="96.933" x="399.5456" y="237.0314">explicit Table(Rep* rep)</text><rect fill="#F24D5C" height="3.635" style="stroke:#C82930;stroke-width:0.605831124574025;" width="3.635" x="392.2757" y="241.7266"/><text fill="#000000" font-family="Albert Sans" font-size="9.0875" lengthAdjust="spacing" textLength="249.6024" x="399.5456" y="247.9364">Status InternalGet(const ReadOptions&amp;, const Slice&amp; key, ...)</text><rect fill="#F24D5C" height="3.635" style="stroke:#C82930;stroke-width:0.605831124574025;" width="3.635" x="392.2757" y="252.6316"/><text fill="#000000" font-family="Albert Sans" font-size="9.0875" lengthAdjust="spacing" textLength="155.0928" x="399.5456" y="258.8413">void ReadMeta(const Footer&amp; footer)</text><rect fill="#F24D5C" height="3.635" style="stroke:#C82930;stroke-width:0.605831124574025;" width="3.635" x="392.2757" y="263.5365"/><text fill="#000000" font-family="Albert Sans" font-size="9.0875" lengthAdjust="spacing" textLength="198.7126" x="399.5456" y="269.7463">void ReadFilter(const Slice&amp; filter_handle_value)</text><!--MD5=[1f4933a164f6deb52e254490925578c8]
class Table::Rep--><rect codeLine="48" fill="#FEFECE" filter="url(#f406t3pr1nllv)" height="94.5097" id="Table::Rep" style="stroke:#A80036;stroke-width:0.9087466868610374;" width="144.1878" x="517.6827" y="4.2408"/><ellipse cx="565.6948" cy="13.9341" fill="#ADD1B2" rx="6.6641" ry="6.6641" style="stroke:#A80036;stroke-width:0.605831124574025;"/><path d="M567.1594,17.0754 Q566.8488,17.2351 566.5071,17.315 Q566.1655,17.3949 565.7883,17.3949 Q564.4482,17.3949 563.7427,16.5119 Q563.0372,15.6288 563.0372,13.9604 Q563.0372,12.2876 563.7427,11.4046 Q564.4482,10.5216 565.7883,10.5216 Q566.1655,10.5216 566.5116,10.6015 Q566.8577,10.6813 567.1594,10.8411 L567.1594,12.2965 Q566.8222,11.9859 566.5049,11.8417 Q566.1876,11.6975 565.8504,11.6975 Q565.1316,11.6975 564.7655,12.2676 Q564.3994,12.8378 564.3994,13.9604 Q564.3994,15.0786 564.7655,15.6488 Q565.1316,16.219 565.8504,16.219 Q566.1876,16.219 566.5049,16.0748 Q566.8222,15.9306 567.1594,15.62 Z " fill="#000000"/><text fill="#000000" font-family="Albert Sans" font-size="9.0875" lengthAdjust="spacing" textLength="43.014" x="578.1144" y="17.1147">Table::Rep</text><line style="stroke:#A80036;stroke-width:0.9087466868610374;" x1="518.2885" x2="661.2647" y1="23.6274" y2="23.6274"/><ellipse cx="524.3468" cy="30.2916" rx="1.8175" ry="1.8175" style="stroke:#038048;stroke-width:0.605831124574025;fill:none;"/><text fill="#000000" font-family="Albert Sans" font-size="9.0875" lengthAdjust="spacing" textLength="96.3271" x="529.7993" y="34.6838">RandomAccessFile* file</text><ellipse cx="524.3468" cy="41.1965" rx="1.8175" ry="1.8175" style="stroke:#038048;stroke-width:0.605831124574025;fill:none;"/><text fill="#000000" font-family="Albert Sans" font-size="9.0875" lengthAdjust="spacing" textLength="74.5172" x="529.7993" y="45.5888">uint64_t cache_id</text><ellipse cx="524.3468" cy="52.1015" rx="1.8175" ry="1.8175" style="stroke:#038048;stroke-width:0.605831124574025;fill:none;"/><text fill="#000000" font-family="Albert Sans" font-size="9.0875" lengthAdjust="spacing" textLength="96.933" x="529.7993" y="56.4938">FilterBlockReader* filter</text><ellipse cx="524.3468" cy="63.0064" rx="1.8175" ry="1.8175" style="stroke:#038048;stroke-width:0.605831124574025;fill:none;"/><text fill="#000000" font-family="Albert Sans" font-size="9.0875" lengthAdjust="spacing" textLength="90.8747" x="529.7993" y="67.3987">const char* filter_data</text><ellipse cx="524.3468" cy="73.9114" rx="1.8175" ry="1.8175" style="stroke:#038048;stroke-width:0.605831124574025;fill:none;"/><text fill="#000000" font-family="Albert Sans" font-size="9.0875" lengthAdjust="spacing" textLength="128.4362" x="529.7993" y="78.3037">BlockHandle metaindex_handle</text><ellipse cx="524.3468" cy="84.8164" rx="1.8175" ry="1.8175" style="stroke:#038048;stroke-width:0.605831124574025;fill:none;"/><text fill="#000000" font-family="Albert Sans" font-size="9.0875" lengthAdjust="spacing" textLength="78.758" x="529.7993" y="89.2086">Block* index_block</text><line style="stroke:#A80036;stroke-width:0.9087466868610374;" x1="518.2885" x2="661.2647" y1="93.9038" y2="93.9038"/><!--MD5=[2a8d265d83dfe8250818898780f04a9b]
reverse link Cache to ShardedLRUCache--><path codeLine="57" d="M176.2423,103.2336 C189.9038,118.9489 205.0375,136.3484 219.0625,152.4695 " fill="none" id="Cache-backto-ShardedLRUCache" style="stroke:#A80036;stroke-width:0.605831124574025;"/><polygon fill="none" points="173.0738,106.0568,168.3241,94.134,179.4775,100.4892,173.0738,106.0568" style="stroke:#A80036;stroke-width:0.605831124574025;"/><text fill="#000000" font-family="Albert Sans" font-size="9.0875" lengthAdjust="spacing" textLength="18.1749" x="197.0102" y="126.1643">实现</text><!--MD5=[2b85e52f1a88bd0f91255ef2ac035348]
reverse link LRUCache to ShardedLRUCache--><path codeLine="58" d="M305.7266,74.3839 C300.2923,94.6248 292.047,125.3768 284.7709,152.5059 " fill="none" id="LRUCache-backto-ShardedLRUCache" style="stroke:#A80036;stroke-width:0.605831124574025;"/><polygon fill="#A80036" points="307.7016,67.017,304.4186,69.8993,305.8165,74.0383,309.0995,71.1561,307.7016,67.017" style="stroke:#A80036;stroke-width:0.605831124574025;"/><text fill="#000000" font-family="Albert Sans" font-size="9.0875" lengthAdjust="spacing" textLength="18.1749" x="294.9004" y="126.1643">关联</text><!--MD5=[8d4031e706ce3c215da18b543e505563]
reverse link ShardedLRUCache to TableCache--><path codeLine="59" d="M269.2919,277.822 C269.2919,292.7921 269.2919,308.4771 269.2919,322.7686 " fill="none" id="ShardedLRUCache-backto-TableCache" style="stroke:#A80036;stroke-width:0.605831124574025;"/><polygon fill="#A80036" points="269.2919,270.025,266.8686,273.66,269.2919,277.295,271.7153,273.66,269.2919,270.025" style="stroke:#A80036;stroke-width:0.605831124574025;"/><text fill="#000000" font-family="Albert Sans" font-size="9.0875" lengthAdjust="spacing" textLength="18.1749" x="269.8978" y="301.8554">关联</text><!--MD5=[21c092d4161f38b4bb78b335f9235ac9]
reverse link Cache to TableCache--><path codeLine="60" d="M122.9655,101.9371 C117.1374,149.089 114.9686,220.468 142.6732,274.4415 C152.1303,292.8588 166.646,309.0102 182.5187,322.6778 " fill="none" id="Cache-backto-TableCache" style="stroke:#A80036;stroke-width:0.605831124574025;stroke-dasharray:7.0,7.0;"/><polygon fill="#A80036" points="123.9712,94.334,121.0933,97.6208,123.0203,101.5415,125.8983,98.2547,123.9712,94.334" style="stroke:#A80036;stroke-width:0.605831124574025;"/><text fill="#000000" font-family="Albert Sans" font-size="9.0875" lengthAdjust="spacing" textLength="18.1749" x="143.2791" y="214.0098">关联</text><!--MD5=[accd635598f3985df8fbf0b6e2cb0530]
reverse link Table::Rep to Table--><path codeLine="61" d="M589.7766,107.5895 C589.7766,120.3665 589.7766,134.0523 589.7766,147.1321 " fill="none" id="Table::Rep-backto-Table" style="stroke:#A80036;stroke-width:0.605831124574025;"/><polygon fill="#A80036" points="589.7766,99.8167,587.3533,103.4517,589.7766,107.0867,592.1999,103.4517,589.7766,99.8167" style="stroke:#A80036;stroke-width:0.605831124574025;"/><text fill="#000000" font-family="Albert Sans" font-size="9.0875" lengthAdjust="spacing" textLength="18.1749" x="590.3824" y="126.1643">关联</text><!--MD5=[f9f2c70b62fbad297377202715cafcff]
reverse link Table to TableCache--><path codeLine="62" d="M458.184,278.6036 C429.3828,293.301 399.3094,308.6467 371.847,322.6657 " fill="none" id="Table-backto-TableCache" style="stroke:#A80036;stroke-width:0.605831124574025;"/><polygon fill="#A80036" points="465.0541,275.0958,460.7148,274.5901,458.5791,278.4012,462.9184,278.9069,465.0541,275.0958" style="stroke:#A80036;stroke-width:0.605831124574025;"/><text fill="#000000" font-family="Albert Sans" font-size="9.0875" lengthAdjust="spacing" textLength="18.1749" x="430.1401" y="301.8554">关联</text><!--MD5=[1778f9718e988c7d80725089327e0045]
@startuml
skinparam defaultFontName "Albert Sans"
skinparam defaultFontSize 15
scale max 800 width
interface Cache {
+ virtual Handle* Insert(const Slice& key, void* value, ...) = 0
+ virtual Handle* Lookup(const Slice& key) = 0
+ virtual void* Value(Handle* handle) = 0
+ virtual void Release(Handle* handle) = 0
+ virtual void Erase(const Slice& key) = 0
}

class ShardedLRUCache {
- LRUCache shard_[kNumShards]
- port::Mutex id_mutex_
- uint64_t last_id_

+ explicit ShardedLRUCache(size_t capacity)
+ Handle* Lookup(const Slice& key) override
+ void Release(Handle* handle) override
+ void Erase(const Slice& key) override
+ void* Value(Handle* handle) override
}

class LRUCache {}

class TableCache {
+ TableCache(const std::string& dbname, const Options& options, int entries)
+ Iterator* NewIterator(const ReadOptions& options, uint64_t file_number, uint64_t file_size, Table** tableptr = nullptr)
+ Status Get(const ReadOptions& options, uint64_t file_number, uint64_t file_size, const Slice& k, ...)
+ void Evict(uint64_t file_number)

- Status FindTable(uint64_t file_number, uint64_t file_size, Cache::Handle**)
- Cache* cache_
}

class Table {
+ {static} Status Open(const Options& options, RandomAccessFile* file, uint64_t file_size, Table** table)
+ Iterator* NewIterator(const ReadOptions&) const

- static Iterator* BlockReader(void*, const ReadOptions&, const Slice&)
- explicit Table(Rep* rep)
- Status InternalGet(const ReadOptions&, const Slice& key, ...)
- void ReadMeta(const Footer& footer)
- void ReadFilter(const Slice& filter_handle_value)
- Rep* const rep_
}

class Table::Rep {
+ RandomAccessFile* file
+ uint64_t cache_id
+ FilterBlockReader* filter
+ const char* filter_data
+ BlockHandle metaindex_handle
+ Block* index_block
}

Cache <|- - ShardedLRUCache: 实现
LRUCache *- - ShardedLRUCache: 关联
ShardedLRUCache *- - TableCache: 关联
Cache *.. TableCache: 关联
Table::Rep *- - Table: 关联
Table *- - TableCache: 关联
@enduml

PlantUML version 1.2021.12(Wed Oct 06 00:01:58 CST 2021)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Default Encoding: UTF-8
Language: zh
Country: CN
--></g></svg>