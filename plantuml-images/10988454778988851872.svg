<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="807px" preserveAspectRatio="none" style="width:648px;height:807px;background:#FFFFFF;" version="1.1" viewBox="0 0 648 807" width="648px" zoomAndPan="magnify"><defs><filter height="300%" id="fqs9potfoh8d4" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[62db8e4c2d9e0408f5650e8d9a685ff5]
class DB--><rect codeLine="4" fill="#FEFECE" filter="url(#fqs9potfoh8d4)" height="156" id="DB" style="stroke:#A80036;stroke-width:1.5;" width="627" x="7" y="7"/><ellipse cx="305.75" cy="23" fill="#B4A7E5" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M302.5098,19.4692 L302.5098,17.5649 L309.021,17.5649 L309.021,19.4692 L306.8457,19.4692 L306.8457,26.5957 L309.021,26.5957 L309.021,28.5 L302.5098,28.5 L302.5098,26.5957 L304.6851,26.5957 L304.6851,19.4692 Z " fill="#000000"/><text fill="#000000" font-family="Albert Sans" font-size="15" font-style="italic" lengthAdjust="spacing" textLength="21" x="326.25" y="28.25">DB</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="633" y1="39" y2="39"/><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="633" y1="47" y2="47"/><ellipse cx="18" cy="58" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="Albert Sans" font-size="15" lengthAdjust="spacing" text-decoration="underline" textLength="508" x="27" y="65.25">Status Open(const Options&amp; options, const std::string&amp; name, DB** dbptr)</text><ellipse cx="18" cy="76" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="Albert Sans" font-size="15" lengthAdjust="spacing" textLength="601" x="27" y="83.25">virtual Status Put(const WriteOptions&amp; options, const Slice&amp; key, const Slice&amp; value) = 0</text><ellipse cx="18" cy="94" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="Albert Sans" font-size="15" lengthAdjust="spacing" textLength="491" x="27" y="101.25">virtual Status Delete(const WriteOptions&amp; options, const Slice&amp; key) = 0</text><ellipse cx="18" cy="112" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="Albert Sans" font-size="15" lengthAdjust="spacing" textLength="515" x="27" y="119.25">virtual Status Write(const WriteOptions&amp; options, WriteBatch* updates) = 0</text><ellipse cx="18" cy="130" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="Albert Sans" font-size="15" lengthAdjust="spacing" textLength="591" x="27" y="137.25">virtual Status Get(const ReadOptions&amp; options, const Slice&amp; key, std::string* value) = 0</text><ellipse cx="18" cy="148" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="Albert Sans" font-size="15" lengthAdjust="spacing" textLength="418" x="27" y="155.25">virtual Iterator* NewIterator(const ReadOptions&amp; options) = 0</text><!--MD5=[9d81e97b02ade70c202fa9507c68fc19]
class DBImpl--><rect codeLine="13" fill="#FEFECE" filter="url(#fqs9potfoh8d4)" height="570" id="DBImpl" style="stroke:#A80036;stroke-width:1.5;" width="609" x="16" y="223"/><ellipse cx="291.25" cy="239" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M293.6675,244.1851 Q293.1548,244.4487 292.5908,244.5806 Q292.0269,244.7124 291.4043,244.7124 Q289.1924,244.7124 288.0278,243.2549 Q286.8633,241.7974 286.8633,239.0435 Q286.8633,236.2822 288.0278,234.8247 Q289.1924,233.3672 291.4043,233.3672 Q292.0269,233.3672 292.5981,233.499 Q293.1694,233.6309 293.6675,233.8945 L293.6675,236.2969 Q293.1108,235.7842 292.5872,235.5461 Q292.0635,235.3081 291.5068,235.3081 Q290.3203,235.3081 289.7161,236.2493 Q289.1118,237.1904 289.1118,239.0435 Q289.1118,240.8892 289.7161,241.8303 Q290.3203,242.7715 291.5068,242.7715 Q292.0635,242.7715 292.5872,242.5334 Q293.1108,242.2954 293.6675,241.7827 Z " fill="#000000"/><text fill="#000000" font-family="Albert Sans" font-size="15" lengthAdjust="spacing" textLength="50" x="311.75" y="244.25">DBImpl</text><line style="stroke:#A80036;stroke-width:1.5;" x1="17" x2="624" y1="255" y2="255"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="24" y="263"/><text fill="#000000" font-family="Albert Sans" font-size="15" lengthAdjust="spacing" textLength="109" x="36" y="273.25">Env* const env_</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="24" y="281"/><text fill="#000000" font-family="Albert Sans" font-size="15" lengthAdjust="spacing" textLength="345" x="36" y="291.25">const InternalKeyComparator internal_comparator_</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="24" y="299"/><text fill="#000000" font-family="Albert Sans" font-size="15" lengthAdjust="spacing" textLength="313" x="36" y="309.25">const InternalFilterPolicy internal_filter_policy_</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="24" y="317"/><text fill="#000000" font-family="Albert Sans" font-size="15" lengthAdjust="spacing" textLength="158" x="36" y="327.25">const Options options_</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="24" y="335"/><text fill="#000000" font-family="Albert Sans" font-size="15" lengthAdjust="spacing" textLength="175" x="36" y="345.25">const std::string dbname_</text><text fill="#000000" font-family="Albert Sans" font-size="15" lengthAdjust="spacing" textLength="0" x="40" y="363.25"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="24" y="371"/><text fill="#000000" font-family="Albert Sans" font-size="15" lengthAdjust="spacing" textLength="223" x="36" y="381.25">TableCache* const table_cache_</text><text fill="#000000" font-family="Albert Sans" font-size="15" lengthAdjust="spacing" textLength="0" x="40" y="399.25"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="24" y="407"/><text fill="#000000" font-family="Albert Sans" font-size="15" lengthAdjust="spacing" textLength="130" x="36" y="417.25">FileLock* db_lock_</text><text fill="#000000" font-family="Albert Sans" font-size="15" lengthAdjust="spacing" textLength="0" x="40" y="435.25"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="24" y="443"/><text fill="#000000" font-family="Albert Sans" font-size="15" lengthAdjust="spacing" textLength="130" x="36" y="453.25">port::Mutex mutex_</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="24" y="461"/><text fill="#000000" font-family="Albert Sans" font-size="15" lengthAdjust="spacing" textLength="124" x="36" y="471.25">MemTable* mem_</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="24" y="479"/><text fill="#000000" font-family="Albert Sans" font-size="15" lengthAdjust="spacing" textLength="120" x="36" y="489.25">MemTable* imm_</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="24" y="497"/><text fill="#000000" font-family="Albert Sans" font-size="15" lengthAdjust="spacing" textLength="141" x="36" y="507.25">WritableFile* logfile_</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="24" y="515"/><text fill="#000000" font-family="Albert Sans" font-size="15" lengthAdjust="spacing" textLength="111" x="36" y="525.25">log::Writer* log_</text><text fill="#000000" font-family="Albert Sans" font-size="15" lengthAdjust="spacing" textLength="0" x="40" y="543.25"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="24" y="551"/><text fill="#000000" font-family="Albert Sans" font-size="15" lengthAdjust="spacing" textLength="191" x="36" y="561.25">std::deque&lt;Writer*&gt; writers_</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="24" y="569"/><text fill="#000000" font-family="Albert Sans" font-size="15" lengthAdjust="spacing" textLength="170" x="36" y="579.25">WriteBatch* tmp_batch_</text><text fill="#000000" font-family="Albert Sans" font-size="15" lengthAdjust="spacing" textLength="0" x="40" y="597.25"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="24" y="605"/><text fill="#000000" font-family="Albert Sans" font-size="15" lengthAdjust="spacing" textLength="169" x="36" y="615.25">SnapshotList snapshots_</text><text fill="#000000" font-family="Albert Sans" font-size="15" lengthAdjust="spacing" textLength="0" x="40" y="633.25"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="24" y="641"/><text fill="#000000" font-family="Albert Sans" font-size="15" lengthAdjust="spacing" textLength="189" x="36" y="651.25">VersionSet* const versions_</text><line style="stroke:#A80036;stroke-width:1.5;" x1="17" x2="624" y1="659" y2="659"/><ellipse cx="27" cy="670" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="Albert Sans" font-size="15" lengthAdjust="spacing" textLength="534" x="36" y="677.25">Status Put(const WriteOptions&amp;, const Slice&amp; key, const Slice&amp; value) override</text><ellipse cx="27" cy="688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="Albert Sans" font-size="15" lengthAdjust="spacing" textLength="428" x="36" y="695.25">Status Delete(const WriteOptions&amp;, const Slice&amp; key) override;</text><ellipse cx="27" cy="706" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="Albert Sans" font-size="15" lengthAdjust="spacing" textLength="507" x="36" y="713.25">Status Write(const WriteOptions&amp; options, WriteBatch* updates) override;</text><ellipse cx="27" cy="724" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="Albert Sans" font-size="15" lengthAdjust="spacing" textLength="583" x="36" y="731.25">Status Get(const ReadOptions&amp; options, const Slice&amp; key, std::string* value) override;</text><ellipse cx="27" cy="742" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="Albert Sans" font-size="15" lengthAdjust="spacing" textLength="351" x="36" y="749.25">Iterator* NewIterator(const ReadOptions&amp;) override</text><text fill="#000000" font-family="Albert Sans" font-size="15" lengthAdjust="spacing" textLength="0" x="40" y="767.25"/><rect fill="#F24D5C" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="24" y="775"/><text fill="#000000" font-family="Albert Sans" font-size="15" lengthAdjust="spacing" textLength="374" x="36" y="785.25">Status Recover(VersionEdit* edit, bool* save_manifest)</text><!--MD5=[f0dd8b25645dc578103df6eaf84f8cbf]
reverse link DB to DBImpl--><path codeLine="46" d="M320.5,184.71 C320.5,196.71 320.5,209.39 320.5,222.52 " fill="none" id="DB-backto-DBImpl" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="313.5,184.73,320.5,164.73,327.5,184.73,313.5,184.73" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[644e03d19801c8d44d79959e5a856bc7]
@startuml
skinparam defaultFontName "Albert Sans"
skinparam defaultFontSize 15
scale max 800 width
interface DB {
+ {static} Status Open(const Options& options, const std::string& name, DB** dbptr)
+ virtual Status Put(const WriteOptions& options, const Slice& key, const Slice& value) = 0
+ virtual Status Delete(const WriteOptions& options, const Slice& key) = 0
+ virtual Status Write(const WriteOptions& options, WriteBatch* updates) = 0
+ virtual Status Get(const ReadOptions& options, const Slice& key, std::string* value) = 0
+ virtual Iterator* NewIterator(const ReadOptions& options) = 0
}

class DBImpl {
+ Status Put(const WriteOptions&, const Slice& key, const Slice& value) override
+ Status Delete(const WriteOptions&, const Slice& key) override;  
+ Status Write(const WriteOptions& options, WriteBatch* updates) override;  
+ Status Get(const ReadOptions& options, const Slice& key, std::string* value) override;  
+ Iterator* NewIterator(const ReadOptions&) override

- Status Recover(VersionEdit* edit, bool* save_manifest)

- Env* const env_
- const InternalKeyComparator internal_comparator_ 
- const InternalFilterPolicy internal_filter_policy_
- const Options options_
- const std::string dbname_

- TableCache* const table_cache_

- FileLock* db_lock_

- port::Mutex mutex_
- MemTable* mem_
- MemTable* imm_
- WritableFile* logfile_
- log::Writer* log_

- std::deque<Writer*> writers_
- WriteBatch* tmp_batch_

- SnapshotList snapshots_

- VersionSet* const versions_
}

DB <|- - DBImpl
@enduml

PlantUML version 1.2021.12(Wed Oct 06 00:01:58 CST 2021)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Default Encoding: UTF-8
Language: zh
Country: CN
--></g></svg>